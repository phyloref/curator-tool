name: Test Klados reasoner backend

# This workflow tests whether the backend is up and running. It does this by sending it a POST request, then
# checking to see if we get back the expected JSON output.

on:
  workflow_dispatch:
  push:
    branches:
      - 'add-scheduled-test-for-backend'


# Based on https://github.com/marketplace/actions/deploy-to-github-pages
jobs:  
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Submit a small Phyx file to the backend server
        id: request
        uses: fjogeleit/http-request-action@v1
        with:
          url: "https://reasoner.phyloref.org/reason"
          method: 'POST'
          customHeaders: '{"X-Hub-Signature": "sha1=b5da475370d024275eb410a58236749c31f957b0"}'
          data: '{"jsonldGzipped": "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"}'
          timeout: 30000
      - name: Show Response
        run: |
          echo ${{ steps.myRequest.outputs.response }}