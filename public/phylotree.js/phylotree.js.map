{"version":3,"file":"phylotree.js","sources":["../src/formats/nexml.js","../src/nodes.js","../src/formats/newick.js","../src/formats/nexus.js","../src/formats/phyloxml.js","../src/formats/beast.js","../src/formats/registry.js","../src/export.js","../src/max-parsimony.js","../src/traversal.js","../src/branches.js","../src/rooting.js","../src/render/coordinates.js","../src/render/radial.js","../src/render/cartesian.js","../src/render/helpers.js","../src/render/options.js","../src/render/nodes.js","../src/render/clades.js","../src/render/edges.js","../src/render/events.js","../src/render/menus.js","../src/render/draw.js","../src/main.js","../src/metrics/pairwise-distances.js","../src/metrics/sackins.js","../src/metrics/center-of-tree.js","../src/metrics/compute-midpoint.js","../src/metrics/root-to-tip.js","../src/extract-dates.js","../src/clustering/cluster-picker.js","../src/clustering/phylopart.js","../src/msa-parsers/fasta.js","../src/neighbor-join.js"],"sourcesContent":["import * as _ from \"underscore\";\r\n//import { parseString } from \"xml2js\";\r\n\r\nvar nexml_parser = function(xml_string, options) {\r\n  var trees;\r\n  parseString(xml_string, function(error, xml) {\r\n    trees = xml[\"nex:nexml\"].trees[0].tree.map(function(nexml_tree) {\r\n      var node_list = nexml_tree.node.map(d => d.$),\r\n        node_hash = node_list.reduce(function(a, b) {\r\n          b.edges = [];\r\n          b.name = b.id;\r\n          a[b.id] = b;\r\n          return a;\r\n        }, {}),\r\n        roots = node_list.filter(d => d.root),\r\n        root_id = roots > 0 ? roots[0].id : node_list[0].id;\r\n      node_hash[root_id].name = \"root\";\r\n\r\n      nexml_tree.edge.map(d => d.$).forEach(function(edge) {\r\n        node_hash[edge.source].edges.push(edge);\r\n      });\r\n\r\n      function parseNexml(node, index) {\r\n        if (node.edges) {\r\n          var targets = _.pluck(node.edges, \"target\");\r\n          node.children = _.values(_.pick(node_hash, targets));\r\n          node.children.forEach(function(child, i) {\r\n            child.attribute = node.edges[i].length || \"\";\r\n          });\r\n          node.children.forEach(parseNexml);\r\n          node.annotation = \"\";\r\n        }\r\n      }\r\n\r\n      parseNexml(node_hash[root_id]);\r\n      return node_hash[root_id];\r\n    });\r\n  });\r\n  return trees;\r\n};\r\n\r\nexport default nexml_parser;\r\n","import * as _ from \"underscore\";\r\n\r\n// These methods are part of the Phylotree object\r\n\r\nexport function graftANode(graftAt, newChild, newParent, lengths) {\r\n\r\n  let nodes = this.nodes.descendants();\r\n\r\n  if (graftAt.parent) {\r\n\r\n    let nodeIndex = nodes.indexOf(graftAt);\r\n\r\n    if (nodeIndex >= 0) {\r\n\r\n      let parentIndex = graftAt.parent.children.indexOf(graftAt);\r\n\r\n      let newSplit = {\r\n          name: newParent,\r\n          parent: graftAt.parent,\r\n          attribute: lengths ? lengths[2] : null,\r\n          original_child_order: graftAt[\"original_child_order\"]\r\n        },\r\n        newNode = {\r\n          name: newChild,\r\n          parent: newSplit,\r\n          attribute: lengths ? lengths[1] : null,\r\n          original_child_order: 2\r\n        };\r\n\r\n      newSplit[\"children\"] = [graftAt, newNode];\r\n      graftAt[\"parent\"].children[parentIndex] = newSplit;\r\n      graftAt.parent = newSplit;\r\n      graftAt[\"attribute\"] = lengths ? lengths[0] : null;\r\n      graftAt[\"original_child_order\"] = 1;\r\n    }\r\n  }\r\n\r\n  return this;\r\n\r\n}\r\n\r\nexport function addChild(parent, child) {\r\n\r\n  if(parent.children) {\r\n    parent.children.push(child);\r\n  } else {\r\n    parent[\"children\"] = [child];\r\n  }\r\n\r\n  return parent;\r\n\r\n}\r\n\r\nexport function createNode(name, lengths) {\r\n\r\n  return {\r\n    data: {\r\n      name: name,\r\n      attribute: lengths ? lengths[1] : null\r\n    },\r\n    parent: '',\r\n  };\r\n\r\n}\r\n\r\n/**\r\n * Delete a given node.\r\n *\r\n * @param {Node} The node to be deleted, or the index of such a node.\r\n * @returns The current ``phylotree``.\r\n */\r\nexport function deleteANode(index) {\r\n  let nodes = this.nodes.descendants();\r\n\r\n  if (typeof index != \"number\") {\r\n    return this.deleteANode(nodes.indexOf(index));\r\n  }\r\n\r\n  if (index > 0 && index < nodes.length) {\r\n    let node = nodes[index];\r\n\r\n    if (node.parent) {\r\n      // can only delete nodes that are not the root\r\n      let delete_me_idx = node.parent.children.indexOf(node);\r\n\r\n      if (delete_me_idx >= 0) {\r\n        nodes.splice(index, 1);\r\n\r\n        if (node.children) {\r\n          node.children.forEach(function(d) {\r\n            d[\"original_child_order\"] = node.parent.children.length;\r\n            node.parent.children.push(d);\r\n            d.parent = node.parent;\r\n          });\r\n        }\r\n\r\n        if (node.parent.children.length > 2) {\r\n          node.parent.children.splice(delete_me_idx, 1);\r\n        } else {\r\n          if (node.parent.parent) {\r\n            node.parent.parent.children[\r\n              node.parent.parent.children.indexOf(node.parent)\r\n            ] =\r\n              node.parent.children[1 - delete_me_idx];\r\n            node.parent.children[1 - delete_me_idx].parent = node.parent.parent;\r\n            nodes.splice(nodes.indexOf(node.parent), 1);\r\n          } else {\r\n            nodes.splice(0, 1);\r\n            nodes.parent = null;\r\n            delete nodes.data[\"attribute\"];\r\n            delete nodes.data[\"annotation\"];\r\n            delete nodes.data[\"original_child_order\"];\r\n            nodes.name = \"root\";\r\n            nodes.data.name = \"root\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return this;\r\n}\r\n\r\n/**\r\n * Get the tips of the tree\r\n * @returns {Array} Nodes in the current ``phylotree``.\r\n */\r\nexport function getTips() {\r\n  // get all nodes that have no nodes\r\n  return _.filter(this.nodes.descendants(), n => {\r\n    return !_.has(n, \"children\");\r\n  });\r\n}\r\n\r\n/**\r\n * Get the internal nodes of the tree\r\n * @returns {Array} Nodes in the current ``phylotree``.\r\n */\r\nexport function getInternals() {\r\n  // get all nodes that have no nodes\r\n  return _.filter(this.nodes.descendants(), n => {\r\n    return _.has(n, \"children\");\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * Get the root node.\r\n *\r\n * @returns the current root node of the ``phylotree``.\r\n */\r\nexport function getRootNode() {\r\n  return this.nodes;\r\n}\r\n\r\n/**\r\n * Get an array of all nodes.\r\n * @returns {Array} Nodes in the current ``phylotree``.\r\n */\r\nexport function getNodes() {\r\n  return this.nodes;\r\n}\r\n\r\n/**\r\n * Get a node by name.\r\n *\r\n * @param {String} name Name of the desired node.\r\n * @returns {Node} Desired node.\r\n */\r\nexport function getNodeByName(name) {\r\n  return _.filter(this.nodes.descendants(), d => {\r\n    return d.data.name == name;\r\n  })[0];\r\n}\r\n\r\n/**\r\n * Add attributes to nodes. New attributes will be placed in the\r\n * ``annotations`` key of any nodes that are matched.\r\n *\r\n * @param {Object} attributes An object whose keys are the names of nodes\r\n * to modify, and whose values are the new attributes to add.\r\n */\r\nexport function assignAttributes(attributes) {\r\n  //return nodes;\r\n  // add annotations to each matching node\r\n  _.each(this.nodes.descendants(), function(d) {\r\n    if (d.data && (d.data.name in attributes)) {\r\n      d[\"annotations\"] = attributes[d.data.name];\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Determine if a given node is a leaf node.\r\n *\r\n * @param {Node} A node in a tree.\r\n * @returns {Bool} Whether or not the node is a leaf node.\r\n */\r\nexport function isLeafNode(node) {\r\n  return !_.has(node, \"children\")\r\n}\r\n\r\n/**\r\n * Update a given key name in each node.\r\n *\r\n * @param {String} old_key The old key name.\r\n * @param {String} new_key The new key name.\r\n * @returns The current ``this``.\r\n */\r\nexport function updateKeyName(old_key, new_key) {\r\n  this.nodes.each(function(n) {\r\n    if (old_key in n) {\r\n      if (new_key) {\r\n        n[new_key] = n[old_key];\r\n      }\r\n      delete n[old_key];\r\n    }\r\n  });\r\n\r\n  return this;\r\n}\r\n\r\nexport function clearInternalNodes(respect) {\r\n  if (!respect) {\r\n    this.nodes.each(d => {\r\n      if (!isLeafNode(d)) {\r\n\r\n        // TODO: Move away from storing attribute data as root (BREAKS occasionally with d3>3)\r\n        d[this.selection_attribute_name] = false;\r\n\r\n        if(!d.data.traits) {\r\n          d.data.traits = {};\r\n        }\r\n        d.data.traits[this.selection_attribute_name] = d[this.selection_attribute_name];\r\n\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\n","import { isLeafNode } from \"../nodes\";\r\n\r\n/**\r\n * Parses a Newick string into an equivalent JSON representation that is\r\n * suitable for consumption by ``hierarchy``.\r\n *\r\n * Optionally accepts bootstrap values. Currently supports Newick strings with or without branch lengths,\r\n * as well as tagged trees such as\r\n *  ``(a,(b{TAG},(c{TAG},d{ANOTHERTAG})))``\r\n *\r\n * @param {String} nwk_str - A string representing a phylogenetic tree in Newick format.\r\n * @param {Object} bootstrap_values.\r\n * @returns {Object} An object with keys ``json`` and ``error``.\r\n */\r\n\r\nfunction newickParser(nwk_str, options={}) {\r\n\r\n  const bootstrap_values = true,\r\n    int_or_float = /^-?\\d+(\\.\\d+)?$/;\r\n  let left_delimiter = options.left_delimiter ||  '{',\r\n    right_delimiter = options.right_delimiter ||  '}';\r\n  let clade_stack = [];\r\n\r\n  function addNewTreeLevel() {\r\n    let new_level = {\r\n      name: null\r\n    };\r\n\r\n    let the_parent = clade_stack[clade_stack.length - 1];\r\n\r\n    if (!(\"children\" in the_parent)) {\r\n      the_parent[\"children\"] = [];\r\n    }\r\n\r\n    clade_stack.push(new_level);\r\n\r\n    the_parent[\"children\"].push(clade_stack[clade_stack.length - 1]);\r\n\r\n    clade_stack[clade_stack.length - 1][\"original_child_order\"] =\r\n      the_parent[\"children\"].length;\r\n  }\r\n\r\n  function finishNodeDefinition() {\r\n\r\n    let this_node = clade_stack.pop();\r\n\r\n    this_node[\"name\"] = current_node_name;\r\n\r\n    if (bootstrap_values && \"children\" in this_node) {\r\n      this_node[\"bootstrap_values\"] = current_node_name;\r\n    } else {\r\n      this_node[\"name\"] = current_node_name;\r\n    }\r\n\r\n    this_node[\"attribute\"] = current_node_attribute;\r\n    if(left_delimiter == \"[\" && current_node_annotation.includes(\"&&NHX\")) {\r\n      current_node_annotation\r\n        .split(':')\r\n        .slice(1)\r\n        .forEach(annotation => {\r\n          const [key, value] = annotation.split('=');\r\n          this_node[key] = int_or_float.test(value) ? +value : value;\r\n        });\r\n    } else {\r\n      this_node[\"annotation\"] = current_node_annotation;\r\n    }\r\n\r\n    current_node_name = \"\";\r\n    current_node_attribute = \"\";\r\n    current_node_annotation = \"\";\r\n  }\r\n\r\n  function generateError(location) {\r\n    return {\r\n      json: null,\r\n      error:\r\n        \"Unexpected '\" +\r\n        nwk_str[location] +\r\n        \"' in '\" +\r\n        nwk_str.substring(location - 20, location + 1) +\r\n        \"[ERROR HERE]\" +\r\n        nwk_str.substring(location + 1, location + 20) +\r\n        \"'\"\r\n    };\r\n  }\r\n\r\n  let automaton_state = 0;\r\n  let current_node_name = \"\";\r\n  let current_node_attribute = \"\";\r\n  let current_node_annotation = \"\";\r\n  let quote_delimiter = null;\r\n\r\n  let name_quotes = {\r\n    \"'\": 1,\r\n    '\"': 1\r\n  };\r\n\r\n  let tree_json = {\r\n    name: \"root\"\r\n  };\r\n\r\n  clade_stack.push(tree_json);\r\n\r\n  var space = /\\s/;\r\n\r\n  for (var char_index = 0; char_index < nwk_str.length; char_index++) {\r\n    try {\r\n      var current_char = nwk_str[char_index];\r\n      switch (automaton_state) {\r\n        case 0: {\r\n          // look for the first opening parenthesis\r\n          if (current_char == \"(\") {\r\n            addNewTreeLevel();\r\n            automaton_state = 1; // expecting node name\r\n          }\r\n          break;\r\n        }\r\n        case 1: // name\r\n        case 3: {\r\n          // branch length\r\n          // reading name\r\n          if (current_char == \":\") {\r\n            automaton_state = 3;\r\n          } else if (current_char == \",\" || current_char == \")\") {\r\n            try {\r\n              finishNodeDefinition();\r\n              automaton_state = 1;\r\n              if (current_char == \",\") {\r\n                addNewTreeLevel();\r\n              }\r\n            } catch (e) {\r\n              return generateError(char_index);\r\n            }\r\n          } else if (current_char == \"(\") {\r\n            if (current_node_name.length > 0) {\r\n              return generateError(char_index);\r\n            } else {\r\n              addNewTreeLevel();\r\n            }\r\n          } else if (current_char in name_quotes) {\r\n            if (\r\n              automaton_state == 1 &&\r\n              current_node_name.length === 0 &&\r\n              current_node_attribute.length === 0 &&\r\n              current_node_annotation.length === 0\r\n            ) {\r\n              automaton_state = 2;\r\n              quote_delimiter = current_char;\r\n              continue;\r\n            }\r\n            return generateError(char_index);\r\n          } else {\r\n            if (current_char == left_delimiter) {\r\n              if (current_node_annotation.length) {\r\n                return generateError(char_index);\r\n              } else {\r\n                automaton_state = 4;\r\n              }\r\n            } else {\r\n              if (automaton_state == 3) {\r\n                current_node_attribute += current_char;\r\n              } else {\r\n                if (space.test(current_char)) {\r\n                  continue;\r\n                }\r\n                if (current_char == \";\") {\r\n                  // semicolon terminates tree definition\r\n                  char_index = nwk_str.length;\r\n                  break;\r\n                }\r\n                current_node_name += current_char;\r\n              }\r\n            }\r\n          }\r\n\r\n          break;\r\n        }\r\n        case 2: {\r\n          // inside a quoted expression\r\n          if (current_char == quote_delimiter) {\r\n            if (char_index < nwk_str.length - 1) {\r\n              if (nwk_str[char_index + 1] == quote_delimiter) {\r\n                char_index++;\r\n                current_node_name += quote_delimiter;\r\n                continue;\r\n              }\r\n            }\r\n            quote_delimiter = 0;\r\n            automaton_state = 1;\r\n            continue;\r\n          } else {\r\n            current_node_name += current_char;\r\n          }\r\n          break;\r\n        }\r\n        case 4: {\r\n          // inside a comment / attribute\r\n          if (current_char == right_delimiter) {\r\n            automaton_state = 3;\r\n          } else {\r\n            if (current_char == left_delimiter) {\r\n              return generateError(char_index);\r\n            }\r\n            current_node_annotation += current_char;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    } catch (e) {\r\n      return generateError(char_index);\r\n    }\r\n  }\r\n\r\n  if (clade_stack.length != 1) {\r\n    return generateError(nwk_str.length - 1);\r\n  }\r\n\r\n  return {\r\n    json: tree_json,\r\n    error: null\r\n  };\r\n}\r\n\r\n/**\r\n * Return Newick string representation of a phylotree.\r\n *\r\n * @param {Function} annotator - Function to apply to each node, determining\r\n * what label is written (optional).\r\n * @param {Node} node - start at this node (default == root)\r\n * @returns {String} newick - Phylogenetic tree serialized as a Newick string.\r\n */\r\n\r\n// TODO: break this out into two seperate functions\r\nexport function getNewick(annotator, root) {\r\n\r\n  let self = this;\r\n\r\n  if (!annotator) annotator = d => '';\r\n\r\n  function nodeDisplay(n) {\r\n    if (!isLeafNode(n)) {\r\n      element_array.push(\"(\");\r\n      n.children.forEach(function(d, i) {\r\n        if (i) {\r\n          element_array.push(\",\");\r\n        }\r\n        nodeDisplay(d);\r\n      });\r\n      element_array.push(\")\");\r\n    }\r\n\r\n    if(n.data.name != 'root') {\r\n      element_array.push(n.data.name);\r\n    }\r\n    element_array.push(annotator(n));\r\n\r\n    let bl = self.branch_length_accessor(n);\r\n\r\n    if (bl !== undefined) {\r\n      element_array.push(\":\" + bl);\r\n    }\r\n  }\r\n\r\n  let element_array = [];\r\n  annotator = annotator || \"\";\r\n  nodeDisplay(root || this.nodes);\r\n\r\n  return element_array.join(\"\")+\";\";\r\n\r\n}\r\n\r\nexport default newickParser;\r\n","import * as _ from \"underscore\";\r\nimport {default as newickParser} from \"./newick\";\r\n\r\nexport function parseAnnotations (buf) {\r\n\r\n  let str = buf;\r\n  let index = str.toUpperCase().indexOf('BEGIN DATA;');\r\n  let data = str.slice(index);\r\n\r\n  if(data.length < 2) {\r\n    return '';\r\n  }\r\n\r\n  index = data.toUpperCase().indexOf('END;');\r\n  let data_str = data.slice(0, index);\r\n\r\n  // split on semicolon\r\n  data = _.map(data_str.split(';'), d => { return d.trim() } );\r\n\r\n  // get dimensions\r\n  let dimensions = _.filter(data, d => {return d.toUpperCase().startsWith('DIMENSION')}); \r\n  dimensions = dimensions[0].split(' ');\r\n  dimensions = _.object(_.map(_.rest(dimensions), d => { return d.split('=') }));\r\n\r\n  // get formats\r\n  let format = _.filter(data, d => {return d.toUpperCase().startsWith('FORMAT')}); \r\n  format = format[0].split(' ');\r\n  format = _.object(_.map(_.rest(format), d => { return d.split('=') }));\r\n  format.symbols = _.reject(format.symbols.split(\"\"), d => d=='\"');\r\n\r\n  // get character matrix\r\n  let matrix = _.filter(data, d => {return d.toUpperCase().startsWith('MATRIX')}); \r\n  matrix = matrix[0].split('\\n')\r\n  matrix = _.object(_.map(_.rest(matrix), d=> { return _.compact(d.split(' ')) }));\r\n\r\n  // create all possible states for matrix\r\n  matrix = _.mapObject(matrix, (v,k) => { \r\n\r\n    if(v == '?') {\r\n      return format.symbols\r\n    }\r\n    else { \r\n      return Array(v)\r\n    }\r\n  \r\n  });\r\n\r\n  return { 'dimensions' : dimensions, 'format' : format, 'matrix' : matrix }\r\n\r\n}\r\n\r\n/**\r\n *  Loads annotations from a nexus-formatted buffer and annotates existing tree\r\n *  nodes appropriately.\r\n *\r\n * @param {Object} tree - Instatiated phylotree\r\n * @param {String} NEXUS string\r\n * @returns {Object} Annotations\r\n */\r\nexport function loadAnnotations(tree, label, annotations) {\r\n\r\n  // if filename, then load from filesystem\r\n  _.each(tree.getTips(), d => { d.data[\"test\"] = annotations.matrix[d.data.name] });\r\n\r\n  // decorate nodes with annotations\r\n\r\n}\r\n\r\nexport default function loadTree(buf) {\r\n\r\n  // if filename, then load from filesystem\r\n  // Parse first tree from NEXUS file and send to newickParser\r\n\r\n  // Make all upper case\r\n  let str = buf;\r\n\r\n  // Get TREE block\r\n  let index = str.toUpperCase().indexOf('BEGIN TREES;');\r\n  let split = str.slice(index);\r\n\r\n  if(split.length < 2) {\r\n    return '';\r\n  }\r\n\r\n  index = split.toUpperCase().indexOf('END;');\r\n  let tree_str = split.slice(0, index);\r\n\r\n  // Filter lines that start with TREE\r\n  let trees = tree_str.split('\\n');\r\n  trees = _.filter(trees, d => { return d.trim().toUpperCase().startsWith('TREE') });\r\n\r\n  // Identify start of newick string\r\n  return newickParser(trees[0]);\r\n\r\n}\r\n\r\n","// Changes XML to JSON\r\n// Modified version from here: http://davidwalsh.name/convert-xml-json\r\nfunction xmlToJson(xml) {\r\n\r\n\t// Create the return object\r\n\tvar obj = {};\r\n\r\n\tif (xml.nodeType == 1) { // element\r\n\t\t// do attributes\r\n\t\tif (xml.attributes.length > 0) {\r\n\t\tobj[\"@attributes\"] = {};\r\n\t\t\tfor (var j = 0; j < xml.attributes.length; j++) {\r\n\t\t\t\tvar attribute = xml.attributes.item(j);\r\n\t\t\t\tobj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\r\n\t\t\t}\r\n\t\t}\r\n\t} else if (xml.nodeType == 3) { // text\r\n\t\tobj = xml.nodeValue;\r\n\t}\r\n\r\n\t// do children\r\n\t// If just one text node inside\r\n\tif (xml.hasChildNodes() && xml.childNodes.length === 1 && xml.childNodes[0].nodeType === 3) {\r\n\t\tobj = xml.childNodes[0].nodeValue;\r\n\t}\r\n\telse if (xml.hasChildNodes()) {\r\n\t\tfor(var i = 0; i < xml.childNodes.length; i++) {\r\n\t\t\tvar item = xml.childNodes.item(i);\r\n\t\t\tvar nodeName = item.nodeName;\r\n\t\t\tif (typeof(obj[nodeName]) == \"undefined\") {\r\n\t\t\t\tobj[nodeName] = xmlToJson(item);\r\n\t\t\t} else {\r\n\t\t\t\tif (typeof(obj[nodeName].push) == \"undefined\") {\r\n\t\t\t\t\tvar old = obj[nodeName];\r\n\t\t\t\t\tobj[nodeName] = [];\r\n\t\t\t\t\tobj[nodeName].push(old);\r\n\t\t\t\t}\r\n\t\t\t\tobj[nodeName].push(xmlToJson(item));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn obj;\r\n}\r\n\r\nvar phyloxml_parser = function(xml, options) {\r\n\r\n  function parsePhyloxml(node, index) {\r\n    if (node.clade) {\r\n      node.clade.forEach(parsePhyloxml);\r\n      node.children = node.clade;\r\n      delete node.clade;\r\n    }\r\n\r\n\t\tnode.annotation = 1;\r\n\t\tnode.attribute = \"0.01\";\r\n    if (node.branch_length) {\r\n\t\t\tnode.attribute = node.branch_length;\r\n    }\r\n    if (node.taxonomy) {\r\n      node.name = node.taxonomy.scientific_name;\r\n    }\r\n\r\n    node.annotation = \"\";\r\n\r\n  }\r\n\r\n  var tree_json;\r\n\r\n  xml = xmlToJson(xml);\r\n  tree_json = xml.phyloxml.phylogeny.clade;\r\n  tree_json.name = \"root\";\r\n  parsePhyloxml(tree_json, 0);\r\n\r\n  return {\r\n    json: tree_json,\r\n    error: null\r\n  };\r\n};\r\n\r\nexport default phyloxml_parser;\r\n","import newickParser from \"./newick\";\r\n\r\nexport default function(newick, options) {\r\n  options.left_delimiter = '[';\r\n  options.right_delimiter = ']';\r\n  const parsed_newick = newickParser(newick, options);\r\n  function parseBeastNode(node) {\r\n    if(node.annotation) {\r\n      node.beast = {};\r\n      const tokens = node.annotation.split(/=|,|{|}/)\r\n        .filter(token => token);\r\n      for(var i = 0; i < tokens.length; i+=2) {\r\n        let key = tokens[i].replace(/&|%/g, '');\r\n        if(/[a-df-zA-DF-Z]+/.test(tokens[i+2])) {\r\n          node.beast[key] = +tokens[i+1];\r\n        } else {\r\n          node.beast[key] = [+tokens[i+1], +tokens[i+2]];\r\n          i++;\r\n        }\r\n      }\r\n    }\r\n    node.annotation = undefined;\r\n    if(node.children) {\r\n      node.children.forEach(parseBeastNode);\r\n    }\r\n  }\r\n  parseBeastNode(parsed_newick.json);\r\n  return parsed_newick;\r\n}\r\n","import { default as nexml_parser } from \"./nexml\";\r\nimport { default as newickParser } from \"./newick\";\r\nimport { default as nexus_parser } from \"./nexus\";\r\nimport { default as phyloxml_parser } from \"./phyloxml\";\r\nimport { default as beast_parser } from \"./beast\";\r\n\r\n/* \r\n * A parser must have two fields, the object and\r\n * options\r\n */\r\nvar format_registry = {\r\n  nexml: nexml_parser,\r\n  phyloxml: phyloxml_parser,\r\n  nexus : nexus_parser,\r\n  nwk: newickParser,\r\n  nhx: newickParser,\r\n  beast: beast_parser\r\n};\r\n\r\nexport default format_registry;\r\n","import * as _ from \"underscore\";\r\n\r\n/**\r\n * Return CSV of nodes sorted by longest branches.\r\n *\r\n * @returns {Array} An array of all tips and associated lengths of the form :\r\n * [{\r\n *    name : <tip_name>,\r\n *    length: <tip_length>\r\n * }, ...]\r\n */\r\n\r\nexport default function getTipLengths() {\r\n\r\n  // Get nodes and branch lengths\r\n  let self = this;\r\n  let tips = self.getTips();\r\n\r\n  // Transform to name, attribute key-pair and sort by attribute length, descending\r\n  let toExport = _.map(tips, d => { return {'name' : d.data.name, 'length' : parseFloat(d.data.attribute) } });\r\n  toExport = _.sortBy(toExport, d=> -d.length)\r\n  return toExport;\r\n  \r\n  \r\n}\r\n","import * as _ from \"underscore\";\r\nimport { isLeafNode } from \"./nodes\";\r\n\r\nexport default function maxParsimony(respect_existing, attr_name) {\r\n\r\n  function populateMpMatrix(attr_name, d) {\r\n\r\n    d.mp = [\r\n      [0, 0], // score for parent selected / not selected\r\n      [false, false]\r\n    ]; // selected or not\r\n\r\n    if (isLeafNode(d)) {\r\n\r\n      d.mp[1][0] = d.mp[1][1] = d[attr_name] || false;\r\n      d.mp[0][0] = d.mp[1][0] ? 1 : 0;\r\n      d.mp[0][1] = 1 - d.mp[0][0];\r\n\r\n    } else {\r\n\r\n      d.children.forEach(pop_mp_mat);\r\n\r\n      var s0 = d.children.reduce(function(p, n) {\r\n        return n.mp[0][0] + p;\r\n      }, 0);\r\n\r\n      // cumulative children score if this node is 0\r\n      var s1 = d.children.reduce(function(p, n) {\r\n        return n.mp[0][1] + p;\r\n      }, 0);\r\n\r\n      // cumulative children score if this node is 1\r\n      // parent = 0\r\n\r\n      if (d[attr_name]) {\r\n        // respect selected\r\n        d.mp[0][0] = s1 + 1;\r\n        d.mp[1][0] = true;\r\n        d.mp[0][1] = s1;\r\n        d.mp[1][1] = true;\r\n      } else {\r\n        if (s0 < s1 + 1) {\r\n          d.mp[0][0] = s0;\r\n          d.mp[1][0] = false;\r\n        } else {\r\n          d.mp[0][0] = s1 + 1;\r\n          d.mp[1][0] = true;\r\n        }\r\n\r\n        // parent = 1\r\n\r\n        if (s1 < s0 + 1) {\r\n          d.mp[0][1] = s1;\r\n          d.mp[1][1] = true;\r\n        } else {\r\n          d.mp[0][1] = s0 + 1;\r\n          d.mp[1][1] = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const pop_mp_mat = _.partial(populateMpMatrix, attr_name);\r\n  pop_mp_mat(this.nodes);\r\n\r\n  this.nodes.each(d => {\r\n    if (d.parent) {\r\n      d.mp = d.mp[1][d.parent.mp ? 1 : 0];\r\n    } else {\r\n      d.mp = d.mp[1][d.mp[0][0] < d.mp[0][1] ? 0 : 1];\r\n    }\r\n  });\r\n\r\n  this.display.modifySelection((d, callback) => {\r\n    if (isLeafNode(d.target)) {\r\n      return d.target[attr_name];\r\n    }\r\n    return d.target.mp;\r\n  });\r\n\r\n}\r\n","import * as _ from \"lodash\";\r\n\r\nexport function postOrder(node, callback, backtrack) {\r\n\r\n  let nodes = [node],\r\n    next = [],\r\n    children,\r\n    i,\r\n    n;\r\n\r\n  while ((node = nodes.pop())) {\r\n    if (!(backtrack && backtrack(node))) {\r\n      next.push(node), (children = node.children);\r\n      if (children)\r\n        for (i = 0, n = children.length; i < n; ++i) {\r\n          nodes.push(children[i]);\r\n        }\r\n    }\r\n  }\r\n\r\n  while ((node = next.pop())) {\r\n    callback(node);\r\n  }\r\n\r\n  return node;\r\n\r\n}\r\n\r\nexport function preOrder(node, callback, backtrack) {\r\n  let nodes = [node],\r\n    children,\r\n    i;\r\n\r\n  while ((node = nodes.pop())) {\r\n    if (!(backtrack && backtrack(node))) {\r\n      callback(node), (children = node.children);\r\n      if (children)\r\n        for (i = children.length - 1; i >= 0; --i) {\r\n          nodes.push(children[i]);\r\n        }\r\n    }\r\n  }\r\n\r\n  return node;\r\n}\r\n\r\nexport default function inOrder(node, callback, backtrack) {\r\n  let current,\r\n    next = [node],\r\n    children,\r\n    i,\r\n    n;\r\n\r\n  do {\r\n    (current = next.reverse()), (next = []);\r\n    while ((node = current.pop())) {\r\n      if (!(backtrack && backtrack(node))) {\r\n        callback(node), (children = node.children);\r\n        if (children)\r\n          for (i = 0, n = children.length; i < n; ++i) {\r\n            next.push(children[i]);\r\n          }\r\n      }\r\n    }\r\n  } while (next.length);\r\n\r\n  return node;\r\n}\r\n\r\n/**\r\n * Traverses a tree that represents left-child right-sibling\r\n * @param {Object} tree -- the phylotree.js tree object \r\n * @return {Object} An edge list that represents the original multi-way tree\r\n *\r\n */\r\nexport function leftChildRightSibling(root) {\r\n\r\n  let declareTrueParent = function(n) {\r\n\r\n    if(n.children) {\r\n      // left child is the child\r\n      n.children[0].data.multiway_parent = n;\r\n\r\n      // right child is the sibling\r\n      n.children[1].data.multiway_parent = n.parent;\r\n    }\r\n\r\n  }\r\n\r\n  // First decorate each node with its true parent node\r\n  postOrder(root, declareTrueParent);\r\n\r\n  // return edge list\r\n  let edge_list = _.map(root.descendants(), n => { \r\n\r\n    let source = n.data.multiway_parent; \r\n    let name = \"unknown\";\r\n\r\n    if(source) {\r\n      name = source.data.name;\r\n    }\r\n\r\n    // In order to get the true name of the infector/infectee, we must traverse\r\n    // the tree from the multiway_parents node.\r\n\r\n    return {\"source\" : n.data.multiway_parent, \"target\" : n, \"name\": name } });\r\n\r\n  // Construct edge list by new parent-child listing\r\n  return edge_list;\r\n\r\n}\r\n\r\n\r\n\r\n","import * as _ from \"underscore\";\r\n\r\n// These methods are part of the Phylotree object\r\n\r\nexport function setPartitions(partitions) {\r\n  this.partitions = partitions;\r\n}\r\n\r\nexport function getPartitions(attributes) {\r\n  return this.partitions;\r\n}\r\n\r\n/**\r\n * Returns T/F whether every branch in the tree has a branch length\r\n *\r\n * @returns {Object} true if  every branch in the tree has a branch length\r\n */\r\nexport default function hasBranchLengths() {\r\n\r\n  let bl = this.branch_length;\r\n\r\n  if (bl) {\r\n    return _.every(this.nodes.descendants(), function(node) {\r\n      return !node.parent || !_.isUndefined(bl(node));\r\n    });\r\n\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * Returns branch lengths\r\n *\r\n * @returns {Array} array of branch lengths\r\n */\r\nexport function getBranchLengths() {\r\n\r\n  let bl = this.branch_length;\r\n  return _.map(this.nodes.descendants(), node => { return bl(node)});\r\n\r\n}\r\n\r\n\r\nexport function defBranchLengthAccessor(_node, new_length) {\r\n\r\n  let _node_data = _node.data;\r\n\r\n  if (\r\n    \"attribute\" in _node_data &&\r\n    _node_data[\"attribute\"] &&\r\n    _node_data[\"attribute\"].length\r\n  ) {\r\n\r\n    if(new_length > 0) {\r\n      _node_data[\"attribute\"] = String(new_length);\r\n    }\r\n\r\n    let bl = parseFloat(_node_data[\"attribute\"]);\r\n\r\n    if (!isNaN(bl)) {\r\n      return Math.max(0, bl);\r\n    }\r\n\r\n  }\r\n\r\n  // Allow for empty branch length at root\r\n  if(_node_data.name == \"root\") {\r\n    return 0;\r\n  }\r\n\r\n  console.warn('Undefined branch length at ' + _node_data.name + '!');\r\n\r\n  return undefined;\r\n\r\n}\r\n\r\n/**\r\n * Get or set branch length accessor.\r\n *\r\n * @param {Function} attr Empty if getting, or new branch length accessor if setting.\r\n * @returns {Object} The branch length accessor if getting, or the current this if setting.\r\n */\r\nexport function setBranchLength(attr) {\r\n  if (!arguments.length) return this.branch_length_accessor;\r\n  this.branch_length_accessor = attr ? attr : defBranchLengthAccessor;\r\n  return this;\r\n}\r\n\r\n/**\r\n * Normalizes branch lengths\r\n */\r\nexport function normalize(attr) {\r\n\r\n  let bl = this.branch_length;\r\n\r\n  let branch_lengths = _.map(this.nodes.descendants(), function(node) {\r\n    if(bl(node)) {\r\n    return bl(node);\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  const max_bl = _.max(branch_lengths);\r\n  const min_bl = _.min(branch_lengths);\r\n\r\n  let scaler = function (x) {\r\n    return (x - min_bl)/(max_bl - min_bl);\r\n  }\r\n\r\n  _.each(this.nodes.descendants(), (node) => {\r\n      let len = bl(node);\r\n      if(len) {\r\n        bl(node, scaler(len));\r\n      }     \r\n  });\r\n\r\n  return this;\r\n\r\n}\r\n\r\n\r\n/**\r\n * Scales branch lengths\r\n *\r\n * @param {Function} function that scales the branches\r\n */\r\nexport function scale(scale_by) {\r\n\r\n  let bl = this.branch_length;\r\n\r\n  _.each(this.nodes.descendants(), (node) => {\r\n      let len = bl(node);\r\n      if(len) {\r\n        bl(node, scale_by(len));\r\n      }     \r\n  });\r\n\r\n  return this;\r\n\r\n}\r\n\r\n/**\r\n * Get or set branch name accessor.\r\n *\r\n * @param {Function} attr (Optional) If setting, a function that accesses a branch name\r\n * from a node.\r\n * @returns The ``nodeLabel`` accessor if getting, or the current ``this`` if setting.\r\n */\r\nexport function branchName(attr) {\r\n  if (!arguments.length) return this.nodeLabel;\r\n  this.nodeLabel = attr;\r\n  return this;\r\n}\r\n","import * as d3 from \"d3\";\r\nimport * as _ from \"underscore\";\r\n\r\n/**\r\n* Reroot the tree on the given node.\r\n*\r\n* @param {Node} node Node to reroot on.\r\n* @param {fraction} if specified, partition the branch not into 0.5 : 0.5, but according to \r\n                   the specified fraction\r\n                   \r\n* @returns {Phylotree} The current ``phylotree``.\r\n*/\r\nexport function reroot(node, fraction) {\r\n\r\n  /** TODO add the option to root in the middle of a branch */\r\n  if(!(node instanceof d3.hierarchy)) {\r\n   throw new Error('node needs to be an instance of a d3.hierarchy node!');\r\n  }\r\n\r\n  let nodes = this.nodes.copy();\r\n\r\n  fraction = fraction !== undefined ? fraction : 0.5;\r\n\r\n  if (node.parent) {\r\n\r\n    var new_json = d3.hierarchy({\r\n      name: \"new_root\"\r\n    });\r\n    \r\n    new_json.children = [node.copy()];\r\n    new_json.data.__mapped_bl = undefined\r\n\r\n    nodes.each(n => {\r\n      n.data.__mapped_bl = this.branch_length_accessor(n);\r\n    });\r\n\r\n    this.setBranchLength(n => {\r\n      return n.data.__mapped_bl;\r\n    });\r\n\r\n    let remove_me = node,\r\n      current_node = node.parent,\r\n      stashed_bl = _.noop();\r\n\r\n    let apportioned_bl =\r\n      node.data.__mapped_bl === undefined ? undefined : node.data.__mapped_bl * fraction;\r\n\r\n    stashed_bl = current_node.data.__mapped_bl;\r\n\r\n    current_node.data.__mapped_bl =\r\n      node.data.__mapped_bl === undefined\r\n        ? undefined\r\n        : node.data.__mapped_bl - apportioned_bl;\r\n\r\n    node.data.__mapped_bl = apportioned_bl;\r\n\r\n    var remove_idx;\r\n\r\n    if (current_node.parent) {\r\n\r\n      new_json.children.push(current_node);\r\n\r\n      while (current_node.parent) {\r\n\r\n        remove_idx = current_node.children.indexOf(remove_me);\r\n\r\n        if (current_node.parent.parent) {\r\n          current_node.children.splice(remove_idx, 1, current_node.parent);\r\n        } else {\r\n          current_node.children.splice(remove_idx, 1);\r\n        }\r\n\r\n        let t = current_node.parent.data.__mapped_bl;\r\n\r\n        if (t !== undefined) {\r\n          current_node.parent.data.__mapped_bl = stashed_bl;\r\n          stashed_bl = t;\r\n        }\r\n\r\n        remove_me = current_node;\r\n        current_node = current_node.parent;\r\n      }\r\n\r\n      remove_idx = current_node.children.indexOf(remove_me);\r\n      current_node.children.splice(remove_idx, 1);\r\n\r\n    } else {\r\n\r\n      remove_idx = current_node.children.indexOf(remove_me);\r\n      current_node.children.splice(remove_idx, 1);\r\n      stashed_bl = current_node.data.__mapped_bl;\r\n      remove_me = new_json;\r\n\r\n    }\r\n\r\n    // current_node is now old root, and remove_me is the root child we came up\r\n    // the tree through\r\n    if (current_node.children.length == 1) {\r\n\r\n      if (stashed_bl) {\r\n        current_node.children[0].data.__mapped_bl += stashed_bl;\r\n      }\r\n\r\n      remove_me.children = remove_me.children.concat(current_node.children);\r\n\r\n    } else {\r\n\r\n      let new_node = new d3.hierarchy({ name: \"__reroot_top_clade\", __mapped_bl: stashed_bl });\r\n      _.extendOwn (new_json.children[0], node);\r\n      new_node.data.__mapped_bl = stashed_bl;\r\n      new_node.children = current_node.children.map(function(n) {\r\n        n.parent = new_node;\r\n        return n;\r\n      });\r\n\r\n      new_node.parent = remove_me;\r\n      remove_me.children.push(new_node);\r\n\r\n   }\r\n\r\n  }\r\n\r\n  // need to traverse the nodes and update parents\r\n  this.update(new_json);\r\n\r\n  this.traverse_and_compute(n => {\r\n    _.each (n.children, (c) => {c.parent = n;})\r\n  }, \"pre-order\");\r\n\r\n\r\n  if(!_.isUndefined(this.display)) {\r\n\r\n    // get options\r\n    let options = this.display.options;\r\n    // get container\r\n    d3.select(this.display.container).select('svg').remove()\r\n\r\n    // retain selection\r\n    let selectionName = this.display.selection_attribute_name\r\n\r\n    delete this.display;\r\n\r\n    let rendered_tree = this.render(options);\r\n    rendered_tree.selectionLabel(selectionName);\r\n    rendered_tree.update();\r\n    d3.select(rendered_tree.container).node().appendChild(rendered_tree.show());\r\n    d3.select(this.display.container).dispatch('reroot');\r\n\r\n  }\r\n\r\n  return this;\r\n\r\n}\r\n\r\nexport function rootpath(attr_name, store_name) {\r\n\r\n  attr_name = attr_name || \"attribute\";\r\n  store_name = store_name || \"y_scaled\";\r\n\r\n  if (\"parent\" in this) {\r\n    let my_value = parseFloat(this[attr_name]);\r\n\r\n    this[store_name] =\r\n      this.parent[store_name] + (isNaN(my_value) ? 0.1 : my_value);\r\n\r\n  } else {\r\n\r\n    this[store_name] = 0.0;\r\n\r\n  }\r\n\r\n  return this[store_name];\r\n\r\n}\r\n\r\nexport function pathToRoot(node) {\r\n  let selection = [];\r\n  while (node) {\r\n    selection.push(node);\r\n    node = node.parent;\r\n  }\r\n  return selection;\r\n}\r\n","export function xCoord(d) {\r\n  return d.y;\r\n}\r\n\r\nexport function yCoord(d) {\r\n  return d.x;\r\n}\r\n","import { xCoord, yCoord } from \"./coordinates\";\r\n\r\nfunction radialMapper(r, a, radial_center) {\r\n  return {\r\n    x: radial_center + r * Math.sin(a),\r\n    y: radial_center + r * Math.cos(a)\r\n  };\r\n}\r\n\r\nfunction cartesianMapper(x, y, radial_center) { // eslint-disable-line\r\n  return polarToCartesian(x - radial_center, y - radial_center);\r\n}\r\n\r\nfunction polarToCartesian(x, y) {\r\n  let r = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\r\n  let a = Math.atan2(y, x);\r\n  return [r, a];\r\n}\r\n\r\nexport function cartesianToPolar(\r\n  node,\r\n  radius,\r\n  radial_root_offset,\r\n  radial_center,\r\n  scales,\r\n  size\r\n) {\r\n\r\n  node.radius = radius * (node.radius + radial_root_offset);\r\n\r\n  //if (!node.angle) {\r\n  node.angle = 2 * Math.PI * node.x * scales[0] / size[0];\r\n  //}\r\n\r\n  let radial = radialMapper(node.radius, node.angle, radial_center);\r\n\r\n  node.x = radial.x;\r\n  node.y = radial.y;\r\n\r\n  return node;\r\n\r\n}\r\n\r\nexport function drawArc(radial_center, points) {\r\n\r\n\r\n  var start = radialMapper(points[0].radius, points[0].angle, radial_center),\r\n    end = radialMapper(points[0].radius, points[1].angle, radial_center);\r\n\r\n  return (\r\n    \"M \" +\r\n    xCoord(start) +\r\n    \",\" +\r\n    yCoord(start) +\r\n    \" A \" +\r\n    points[0].radius +\r\n    \",\" +\r\n    points[0].radius +\r\n    \" 0,0, \" +\r\n    (points[1].angle > points[0].angle ? 1 : 0) +\r\n    \" \" +\r\n    xCoord(end) +\r\n    \",\" +\r\n    yCoord(end) +\r\n    \" L \" +\r\n    xCoord(points[1]) +\r\n    \",\" +\r\n    yCoord(points[1])\r\n  );\r\n}\r\n\r\nexport function arcSegmentPlacer(edge, where, radial_center) {\r\n  var r = radialMapper(\r\n    edge.target.radius + (edge.source.radius - edge.target.radius) * where,\r\n    edge.target.angle,\r\n    radial_center\r\n  );\r\n  return { x: xCoord(r), y: yCoord(r) };\r\n}\r\n","import * as d3 from \"d3\";\r\nimport { xCoord, yCoord } from \"./coordinates\";\r\n\r\nexport var draw_line = d3\r\n  .line()\r\n  .x(function(d) {\r\n    return xCoord(d);\r\n  })\r\n  .y(function(d) {\r\n    return yCoord(d);\r\n  })\r\n  .curve(d3.curveStepBefore);\r\n\r\nexport function lineSegmentPlacer(edge, where) {\r\n  return {\r\n    x:\r\n      xCoord(edge.target) +\r\n      (xCoord(edge.source) - xCoord(edge.target)) * where,\r\n    y: yCoord(edge.target)\r\n  };\r\n}\r\n\r\nexport default draw_line;\r\n","export function itemTagged(item) {\r\n  return item.tag || false;\r\n}\r\n\r\nexport function itemSelected(item, tag) {\r\n  return item[tag] || false;\r\n}\r\n","import { isLeafNode } from \"../nodes\";\r\n\r\nexport const css_classes = {\r\n  \"tree-container\": \"phylotree-container\",\r\n  \"tree-scale-bar\": \"tree-scale-bar\",\r\n  node: \"node\",\r\n  \"internal-node\": \"internal-node\",\r\n  \"tagged-node\": \"node-tagged\",\r\n  \"selected-node\": \"node-selected\",\r\n  \"collapsed-node\": \"node-collapsed\",\r\n  \"root-node\": \"root-node\",\r\n  branch: \"branch\",\r\n  \"selected-branch\": \"branch-selected\",\r\n  \"tagged-branch\": \"branch-tagged\",\r\n  \"tree-selection-brush\": \"tree-selection-brush\",\r\n  \"branch-tracer\": \"branch-tracer\",\r\n  clade: \"clade\",\r\n  node_text: \"phylotree-node-text\"\r\n};\r\n\r\nexport function internalNames(attr) {\r\n  if (!arguments.length) return this.options[\"internal-names\"];\r\n  this.options[\"internal-names\"] = attr;\r\n  return this;\r\n}\r\n\r\nexport function radial(attr) {\r\n  if (!arguments.length) return this.options[\"is-radial\"];\r\n  this.options[\"is-radial\"] = attr;\r\n  return this;\r\n}\r\n\r\nexport function alignTips(attr) {\r\n  if (!arguments.length) return this.options[\"align-tips\"];\r\n  this.options[\"align-tips\"] = attr;\r\n  return this;\r\n}\r\n\r\n/**\r\n * Return the bubble size of the current node.\r\n *\r\n * @param {Node} A node in the phylotree.\r\n * @returns {Float} The size of the bubble associated to this node.\r\n */\r\nexport function nodeBubbleSize(node) {\r\n\r\n  // if a custom bubble styler, use that instead\r\n\r\n  if(this.options[\"draw-size-bubbles\"] && this.options[\"bubble-styler\"]) {\r\n    return this.options[\"bubble-styler\"](node);\r\n  } else {\r\n    return this.options[\"draw-size-bubbles\"]\r\n      ? this.relative_nodeSpan(node) * this.scales[0] * 0.25\r\n      : 0;\r\n    }\r\n}\r\n\r\nexport function shiftTip(d) {\r\n  if (this.options[\"is-radial\"]) {\r\n    return [\r\n      (d.text_align == \"end\" ? -1 : 1) *\r\n        (this.radius_pad_for_bubbles - d.radius),\r\n      0\r\n    ];\r\n  }\r\n  if (this.options[\"right-to-left\"]) {\r\n    return [this.right_most_leaf - d.screen_x, 0];\r\n  }\r\n  return [this.right_most_leaf - d.screen_x, 0];\r\n}\r\n\r\nexport function layoutHandler(attr) {\r\n  if (!arguments.length) return this.layout_listener_handler;\r\n  this.layout_listener_handler = attr;\r\n  return this;\r\n}\r\n\r\n/**\r\n * Getter/setter for the selection label. Useful when allowing\r\n * users to make multiple selections.\r\n *\r\n * @param {String} attr (Optional) If setting, the new selection label.\r\n * @returns The current selection label if getting, or the current ``phylotree`` if setting.\r\n */\r\nexport function selectionLabel(attr) {\r\n  if (!arguments.length) return this.selection_attribute_name;\r\n  this.selection_attribute_name = attr;\r\n  this.syncEdgeLabels();\r\n  return this;\r\n}\r\n\r\n/**\r\n * Get or set the current node span. If setting, the argument should\r\n * be a function of a node which returns a number, so that node spans\r\n * can be determined dynamically. Alternatively, the argument can be the\r\n * string ``\"equal\"``, to give all nodes an equal span.\r\n *\r\n * @param {Function} attr Optional; if setting, the nodeSpan function.\r\n * @returns The ``nodeSpan`` if getting, or the current ``phylotree`` if setting.\r\n */\r\nexport function nodeSpan(attr) {\r\n  if (!arguments.length) return nodeSpan;\r\n  if (typeof attr == \"string\" && attr == \"equal\") {\r\n    nodeSpan = function(d) { // eslint-disable-line\r\n      return 1;\r\n    };\r\n  } else {\r\n    nodeSpan = attr; // eslint-disable-line\r\n  }\r\n  return this;\r\n}\r\n\r\n// List of all selecters that can be used with the restricted-selectable option\r\nexport var predefined_selecters = {\r\n  all: d => {\r\n    return true;\r\n  },\r\n  none: d => {\r\n    return false;\r\n  },\r\n  \"all-leaf-nodes\": d => {\r\n    return isLeafNode(d.target);\r\n  },\r\n  \"all-internal-nodes\": d => {\r\n    return !isLeafNode(d.target);\r\n  }\r\n};\r\n\r\n/**\r\n * Getter/setter for the selection callback. This function is called\r\n * every time the current selection is modified, and its argument is\r\n * an array of nodes that make up the current selection.\r\n *\r\n * @param {Function} callback (Optional) The selection callback function.\r\n * @returns The current ``selectionCallback`` if getting, or the current ``this`` if setting.\r\n */\r\nexport function selectionCallback(callback) {\r\n  if (!callback) return this.selectionCallback;\r\n  this.selectionCallback = callback;\r\n  return this;\r\n}\r\n","import * as d3 from \"d3\";\r\n\r\nimport { itemTagged, itemSelected } from \"./helpers\";\r\nimport { isLeafNode } from \"../nodes\";\r\nimport { css_classes } from \"./options\";\r\n\r\nexport function shiftTip(d) {\r\n\r\n  if (this.radial()) {\r\n    return [\r\n      (d.text_align == \"end\" ? -1 : 1) *\r\n        (this.radius_pad_for_bubbles - d.radius),\r\n      0\r\n    ];\r\n  }\r\n\r\n  if (this.options[\"right-to-left\"]) {\r\n    return [this.right_most_leaf - d.screen_x, 0];\r\n  }\r\n\r\n  return [this.right_most_leaf - d.screen_x, 0];\r\n\r\n}\r\n\r\nexport function drawNode(container, node, transitions) {\r\n\r\n  container = d3.select(container);\r\n  var is_leaf = isLeafNode(node);\r\n\r\n  if (is_leaf) {\r\n    container = container.attr(\"data-node-name\", node.data.name);\r\n  }\r\n\r\n  var labels = container.selectAll(\"text\").data([node]),\r\n    tracers = container.selectAll(\"line\");\r\n\r\n  if (is_leaf || (this.showInternalName(node) && !isNodeCollapsed(node))) {\r\n\r\n    labels = labels\r\n      .enter()\r\n      .append(\"text\")\r\n      .classed(this.css_classes[\"node_text\"], true)\r\n      .merge(labels)\r\n      .on(\"click\", d=> {\r\n        this.handle_node_click(node, d);\r\n      })\r\n      .attr(\"dy\", d => {\r\n        return this.shown_font_size * 0.33;\r\n      })\r\n      .text(d => {\r\n        return this.options[\"show-labels\"] ? this._nodeLabel(d) : \"\";\r\n      })\r\n      .style(\"font-size\", d => {\r\n        return this.ensure_size_is_in_px(this.shown_font_size);\r\n      });\r\n\r\n    if (this.radial()) {\r\n      labels = labels\r\n        .attr(\"transform\", d => {\r\n          return (\r\n            this.d3PhylotreeSvgRotate(d.text_angle) +\r\n            this.d3PhylotreeSvgTranslate(\r\n              this.alignTips() ? this.shiftTip(d) : null\r\n            )\r\n          );\r\n        })\r\n        .attr(\"text-anchor\", d => {\r\n          return d.text_align;\r\n        });\r\n    } else {\r\n      labels = labels.attr(\"text-anchor\", \"start\").attr(\"transform\", d => {\r\n        if (this.options[\"layout\"] == \"right-to-left\") {\r\n          return this.d3PhylotreeSvgTranslate([-20, 0]);\r\n        }\r\n        return this.d3PhylotreeSvgTranslate(\r\n          this.alignTips() ? this.shiftTip(d) : null\r\n        );\r\n      });\r\n    }\r\n\r\n    if (this.alignTips()) {\r\n      tracers = tracers.data([node]);\r\n\r\n      if (transitions) {\r\n        tracers = tracers\r\n          .enter()\r\n          .append(\"line\")\r\n          .classed(this.css_classes[\"branch-tracer\"], true)\r\n          .merge(tracers)\r\n          .attr(\"x1\", d => {\r\n            return (\r\n              (d.text_align == \"end\" ? -1 : 1) * this.nodeBubbleSize(node)\r\n            );\r\n          })\r\n          .attr(\"x2\", 0)\r\n          .attr(\"y1\", 0)\r\n          .attr(\"y2\", 0)\r\n          .attr(\"x2\", d => {\r\n            if (this.options[\"layout\"] == \"right-to-left\") {\r\n              return d.screen_x;\r\n            }\r\n\r\n            return this.shiftTip(d)[0];\r\n          })\r\n          .attr(\"transform\", d => {\r\n            return this.d3PhylotreeSvgRotate(d.text_angle);\r\n          })\r\n          .attr(\"x2\", d => {\r\n            if (this.options[\"layout\"] == \"right-to-left\") {\r\n              return d.screen_x;\r\n            }\r\n            return this.shiftTip(d)[0];\r\n          })\r\n          .attr(\"transform\", d => {\r\n            return this.d3PhylotreeSvgRotate(d.text_angle);\r\n          });\r\n      } else {\r\n        tracers = tracers\r\n          .enter()\r\n          .append(\"line\")\r\n          .classed(this.css_classes[\"branch-tracer\"], true)\r\n          .merge(tracers)\r\n          .attr(\"x1\", d => {\r\n            return (\r\n              (d.text_align == \"end\" ? -1 : 1) * this.nodeBubbleSize(node)\r\n            );\r\n          })\r\n          .attr(\"y2\", 0)\r\n          .attr(\"y1\", 0)\r\n          .attr(\"x2\", d => {\r\n            return this.shiftTip(d)[0];\r\n          });\r\n        tracers.attr(\"transform\", d => {\r\n          return this.d3PhylotreeSvgRotate(d.text_angle);\r\n        });\r\n      }\r\n    } else {\r\n      tracers.remove();\r\n    }\r\n\r\n    if (this.options[\"draw-size-bubbles\"]) {\r\n\r\n      var shift = this.nodeBubbleSize(node);\r\n\r\n      let circles = container\r\n        .selectAll(\"circle\")\r\n        .data([shift])\r\n        .enter()\r\n        .append(\"circle\");\r\n\r\n      circles.attr(\"r\", function(d) {\r\n        return d;\r\n      });\r\n\r\n      if (this.shown_font_size >= 5) {\r\n        labels = labels.attr(\"dx\", d => {\r\n          return (\r\n            (d.text_align == \"end\" ? -1 : 1) *\r\n            ((this.alignTips() ? 0 : shift) + this.shown_font_size * 0.33)\r\n          );\r\n        });\r\n      }\r\n    } else {\r\n      if (this.shown_font_size >= 5) {\r\n        labels = labels.attr(\"dx\", d => { // eslint-disable-line\r\n          return (d.text_align == \"end\" ? -1 : 1) * this.shown_font_size * 0.33;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  if (!is_leaf) {\r\n    let circles = container\r\n        .selectAll(\"circle\")\r\n        .data([node])\r\n        .enter()\r\n        .append(\"circle\"),\r\n      radius = this.node_circle_size()(node);\r\n\r\n    if (radius > 0) {\r\n      circles\r\n        .merge(circles)\r\n        .attr(\"r\", d => {\r\n          return Math.min(this.shown_font_size * 0.75, radius);\r\n        })\r\n        .on(\"click\", d => {\r\n          this.handle_node_click(node, d);\r\n        });\r\n    } else {\r\n      circles.remove();\r\n    }\r\n  }\r\n\r\n  if (this.node_styler) {\r\n    this.node_styler(container, node);\r\n  }\r\n\r\n  return node;\r\n}\r\n\r\nexport function updateHasHiddenNodes() {\r\n  let nodes = this.phylotree.nodes.descendants();\r\n\r\n  for (let k = nodes.length - 1; k >= 0; k -= 1) {\r\n    if (isLeafNode(nodes[k])) {\r\n      nodes[k].hasHiddenNodes = nodes[k].notshown;\r\n    } else {\r\n      nodes[k].hasHiddenNodes = nodes[k].children.reduce(function(p, c) {\r\n        return c.notshown || p;\r\n      }, false);\r\n    }\r\n  }\r\n\r\n  return this;\r\n}\r\n\r\nexport function showInternalName(node) {\r\n\r\n  const i_names = this.internalNames();\r\n\r\n  if (i_names) {\r\n    if (typeof i_names === \"function\") {\r\n      return i_names(node);\r\n    }\r\n    return i_names;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * Get or set the current node span. If setting, the argument should\r\n * be a function of a node which returns a number, so that node spans\r\n * can be determined dynamically. Alternatively, the argument can be the\r\n * string ``\"equal\"``, to give all nodes an equal span.\r\n *\r\n * @param {Function} attr Optional; if setting, the nodeSpan function.\r\n * @returns The ``nodeSpan`` if getting, or the current ``phylotree`` if setting.\r\n */\r\nexport function nodeSpan(attr) {\r\n  if (!arguments.length) return this.nodeSpan;\r\n  if (typeof attr == \"string\" && attr == \"equal\") {\r\n    this.nodeSpan = function(d) {\r\n      return 1;\r\n    };\r\n  } else {\r\n    this.nodeSpan = attr;\r\n  }\r\n  return this;\r\n}\r\n\r\nexport function reclassNode(node) {\r\n\r\n  let class_var = css_classes[isLeafNode(node) ? \"node\" : \"internal-node\"];\r\n\r\n  if (itemTagged(node)) {\r\n    class_var += \" \" + css_classes[\"tagged-node\"];\r\n  }\r\n\r\n  if (itemSelected(node, this.selection_attribute_name)) {\r\n    class_var += \" \" + css_classes[\"selected-node\"];\r\n  }\r\n\r\n  if (!node[\"parent\"]) {\r\n    class_var += \" \" + css_classes[\"root-node\"];\r\n  }\r\n\r\n  if (isNodeCollapsed(node) || hasHiddenNodes(node)) {\r\n    class_var += \" \" + css_classes[\"collapsed-node\"];\r\n  }\r\n\r\n  return class_var;\r\n}\r\n\r\nexport function nodeVisible(node) {\r\n  return !(node.hidden || node.notshown || false);\r\n}\r\n\r\nexport function nodeNotshown(node) {\r\n  return node.notshown;\r\n}\r\n\r\nexport function hasHiddenNodes(node) {\r\n  return node.hasHiddenNodes || false;\r\n}\r\n\r\nexport function isNodeCollapsed(node) {\r\n  return node.collapsed || false;\r\n}\r\n\r\nexport function nodeCssSelectors(css_classes) {\r\n  return [\r\n    css_classes[\"node\"],\r\n    css_classes[\"internal-node\"],\r\n    css_classes[\"collapsed-node\"],\r\n    css_classes[\"tagged-node\"],\r\n    css_classes[\"root-node\"]\r\n  ].reduce(function(p, c, i, a) {\r\n    return (p += \"g.\" + c + (i < a.length - 1 ? \",\" : \"\"));\r\n  }, \"\");\r\n}\r\n\r\nexport function internalLabel(callback, respect_existing) {\r\n\r\n  this.phylotree.clearInternalNodes(respect_existing);\r\n\r\n  for (var i = this.phylotree.nodes.descendants().length - 1; i >= 0; i--) {\r\n\r\n    var d = this.phylotree.nodes.descendants()[i];\r\n\r\n    if (!(isLeafNode(d) || itemSelected(d, this.selection_attribute_name))) {\r\n      d[this.selection_attribute_name] = callback(d.children);\r\n    }\r\n\r\n  }\r\n\r\n  this.modifySelection((d, callback) => {\r\n    if (isLeafNode(d.target)) {\r\n      return d.target[this.selection_attribute_name];\r\n    }\r\n    return d.target[this.selection_attribute_name];\r\n  });\r\n}\r\n\r\nexport function defNodeLabel(_node) {\r\n\r\n  _node = _node.data;\r\n\r\n  if (isLeafNode(_node)) {\r\n    return _node.name || \"\";\r\n  }\r\n\r\n  if (this.showInternalName(_node)) {\r\n    return _node.name;\r\n  }\r\n\r\n  return \"\";\r\n\r\n}\r\n\r\n/**\r\n * Get or set nodeLabel accessor.\r\n *\r\n * @param {Function} attr (Optional) If setting, a function that accesses a branch name\r\n * from a node.\r\n * @returns The ``nodeLabel`` accessor if getting, or the current ``this`` if setting.\r\n */\r\nexport function nodeLabel(attr) {\r\n  if (!arguments.length) return this._nodeLabel;\r\n  this._nodeLabel = attr ? attr : defNodeLabel;\r\n\tthis.update();\r\n  return this;\r\n}\r\n\r\n\r\n","import * as d3 from \"d3\";\r\nimport * as _ from \"underscore\";\r\nimport { isNodeCollapsed } from \"./nodes\";\r\n\r\nexport function cladeCssSelectors(css_classes) {\r\n  return [css_classes[\"clade\"]].reduce(function(p, c, i, a) {\r\n    return (p += \"path.\" + c + (i < a.length - 1 ? \",\" : \"\"));\r\n  }, \"\");\r\n}\r\n\r\nexport function updateCollapsedClades(transitions) {\r\n\r\n  let enclosure = this.svg.selectAll(\".\" + this.css_classes[\"tree-container\"]);\r\n  var node_id = 0;\r\n\r\n  let collapsed_clades = enclosure\r\n    .selectAll(cladeCssSelectors(this.css_classes))\r\n    .data(\r\n      this.phylotree.nodes.descendants().filter(isNodeCollapsed),\r\n      function(d) {\r\n        return d.id || (d.id = ++node_id);\r\n      }\r\n    );\r\n\r\n  let spline = function() {};\r\n  let spline_f = _.noop();\r\n\r\n  // Collapse radial differently\r\n  if (this.radial()) {\r\n    spline = d3\r\n      .line()\r\n      .curve(d3.curveBasis)\r\n      .y(function(d) {\r\n        return d[0];\r\n      })\r\n      .x(function(d) {\r\n        return d[1];\r\n      });\r\n\r\n    spline_f = function(coord, i, d, init_0, init_1) {\r\n      if (i) {\r\n        return [\r\n          d.screen_y + (coord[0] - init_0) / 50,\r\n          d.screen_x + (coord[1] - init_1) / 50\r\n        ];\r\n      } else {\r\n        return [d.screen_y, d.screen_x];\r\n      }\r\n    };\r\n  } else {\r\n    spline = d3\r\n      .line()\r\n      .y(function(d) {\r\n        return d[0];\r\n      })\r\n      .x(function(d) {\r\n        return d[1];\r\n      }).curve(d3.curveBasis);\r\n\r\n    spline_f = function(coord, i, d, init_0, init_1) {\r\n      if (i) {\r\n         return [\r\n          d.screen_y + (coord[0] - init_0) / 50 ,\r\n          d.screen_x + (coord[1] - init_1) / 50,\r\n        ];\r\n      } else {\r\n        return [d.screen_y, d.screen_x];\r\n      }\r\n    };\r\n  }\r\n\r\n  collapsed_clades\r\n    .exit()\r\n    .each(function(d) {\r\n      d.collapsed_clade = null;\r\n    })\r\n    .remove();\r\n\r\n  if (transitions) {\r\n    collapsed_clades\r\n      .enter()\r\n      .insert(\"path\", \":first-child\")\r\n      .attr(\"class\", this.css_classes[\"clade\"])\r\n      .merge(collapsed_clades)\r\n      .attr(\"d\", function(d) {\r\n        if (d.collapsed_clade) {\r\n          return d.collapsed_clade;\r\n        }\r\n\r\n        //console.log (d.collapsed);\r\n        let init_0 = d.collapsed[0][0];\r\n        let init_1 = d.collapsed[0][1];\r\n        \r\n\r\n  \r\n        // #1 return spline(d.collapsed.map(spline_f, d, init_0, init_1));\r\n        return spline(\r\n          d.collapsed.map(function(coord, i) {\r\n            return spline_f(coord, i, d, init_0, init_1);\r\n          })\r\n        );\r\n      })\r\n      .attr(\"d\", function(d) {        \r\n        return (d.collapsed_clade = spline(d.collapsed));\r\n      });\r\n  } else {\r\n    collapsed_clades\r\n      .enter()\r\n      .insert(\"path\", \":first-child\")\r\n      .attr(\"class\", this.css_classes[\"clade\"])\r\n      .merge(collapsed_clades)\r\n      .attr(\"d\", function(d) {\r\n        return (d.collapsed_clade ? d.collapsed_clade : d.collapsed_clade = spline(d.collapsed));\r\n      });\r\n  }\r\n}\r\n","import * as d3 from \"d3\";\r\nimport { itemTagged, itemSelected } from \"./helpers\";\r\nimport { css_classes } from \"./options\";\r\n\r\nexport function drawEdge(container, edge, transition) {\r\n\r\n  container = d3.select(container);\r\n\r\n  container = container\r\n    .attr(\"class\", d => {\r\n      return this.reclassEdge(d);\r\n    })\r\n    .on(\"click\", d => {\r\n      this.modifySelection([edge.target], this.selection_attribute_name);\r\n      this.update();\r\n    });\r\n\r\n  let new_branch_path = this.draw_branch([edge.source, edge.target]);\r\n\r\n  if (transition) {\r\n\r\n    if (container.datum().existing_path) {\r\n      container = container.attr(\"d\", function(d) {\r\n        return d.existing_path;\r\n      });\r\n    }\r\n\r\n    container = container.attr(\"d\", new_branch_path);\r\n\r\n  } else {\r\n    container = container.attr(\"d\", new_branch_path);\r\n  }\r\n\r\n  edge.existing_path = new_branch_path;\r\n\r\n  var bl = this.phylotree.branch_length_accessor(edge.target);\r\n\r\n  if (bl !== undefined) {\r\n    var haz_title = container.selectAll(\"title\");\r\n\r\n    if (haz_title.empty()) {\r\n      haz_title = container.append(\"title\");\r\n    }\r\n    haz_title.text(\"Length = \" + bl);\r\n  } else {\r\n    container.selectAll(\"title\").remove();\r\n  }\r\n\r\n  if (this.edge_styler) {\r\n    this.edge_styler(container, edge, transition);\r\n  }\r\n\r\n  return this.phylotree;\r\n\r\n}\r\n\r\nexport function reclassEdge(edge) {\r\n\r\n  let class_var = css_classes[\"branch\"];\r\n\r\n  if (itemTagged(edge)) {\r\n    class_var += \" \" + css_classes[\"tagged-branch\"];\r\n  }\r\n\r\n  if (itemSelected(edge, this.selection_attribute_name)) {\r\n    class_var += \" \" + css_classes[\"selected-branch\"];\r\n  }\r\n\r\n  return class_var;\r\n\r\n}\r\n\r\nexport function initializeEdgeLabels() {\r\n\r\n  this.links.forEach(d => {\r\n\r\n    // TODO: Move away from storing attribute data as root (BREAKS occasionally with d3>3)\r\n    if(d.target.data.annotation) {\r\n      d.target[d.target.data.annotation] = d.target.data.annotation;\r\n    }\r\n\r\n  });\r\n\r\n}\r\n\r\n\r\nexport function syncEdgeLabels() {\r\n\r\n  this.links.forEach(d => {\r\n\r\n    // TODO: Move away from storing attribute data as root (BREAKS occasionally with d3>3)\r\n    d[this.selection_attribute_name] =\r\n      d.target[this.selection_attribute_name] || false;\r\n    d.tag = d.target.tag || false;\r\n\r\n  });\r\n\r\n  if (this.countHandler()) {\r\n\r\n    let counts = {};\r\n\r\n    counts[\r\n      this.selection_attribute_name\r\n    ] = this.links.reduce((p, c) => {\r\n      return p + (c[this.selection_attribute_name] ? 1 : 0);\r\n    }, 0);\r\n\r\n    counts[\"tagged\"] = this.links.reduce(function(p, c) {\r\n      return p + (itemTagged(c) ? 1 : 0);\r\n    }, 0);\r\n\r\n    this.countUpdate(this, counts, this.countHandler());\r\n\r\n  }\r\n\r\n}\r\n\r\nexport function edgeVisible(edge) {\r\n  return !(edge.target.hidden || edge.target.notshown || false);\r\n}\r\n\r\nexport function edgeCssSelectors(css_classes) {\r\n  return [\r\n    css_classes[\"branch\"],\r\n    css_classes[\"selected-branch\"],\r\n    css_classes[\"tagged-branch\"]\r\n  ].reduce(function(p, c, i, a) {\r\n    return (p += \"path.\" + c + (i < a.length - 1 ? \",\" : \"\"));\r\n  }, \"\");\r\n}\r\n\r\nexport function placeAlongAnEdge (e, where) {\r\n    return this.edge_placer (e, where);\r\n}\r\n","import { isLeafNode } from \"../nodes\";\r\nimport { css_classes } from \"./options\";\r\n\r\nlet d3_layout_phylotree_event_id = \"phylotree.event\";\r\n\r\n/**\r\n * Toggle collapsed view of a given node. Either collapses a clade into\r\n * a smaller blob for viewing large trees, or expands a node that was\r\n * previously collapsed.\r\n *\r\n * @param {Node} node The node to toggle.\r\n * @returns {Phylotree} The current ``phylotree``.\r\n */\r\nexport function toggleCollapse(node) {\r\n  if (node.collapsed) {\r\n    node.collapsed = false;\r\n\r\n    let unhide = function(n) {\r\n      if (!isLeafNode(n)) {\r\n        if (!n.collapsed) {\r\n          n.children.forEach(unhide);\r\n        }\r\n      }\r\n      n.hidden = false;\r\n    };\r\n\r\n    unhide(node);\r\n  } else {\r\n    node.collapsed = true;\r\n  }\r\n\r\n  this.placenodes();\r\n  return this;\r\n}\r\n\r\nexport function resizeSvg(tree, svg, tr) {\r\n\r\n  let sizes = this.size;\r\n\r\n  if (this.radial()) {\r\n    let pad_radius = this.pad_width(),\r\n      vertical_offset =\r\n        this.options[\"top-bottom-spacing\"] != \"fit-to-size\"\r\n          ? this.pad_height()\r\n          : 0;\r\n\r\n    sizes = [\r\n      sizes[1] + 2 * pad_radius,\r\n      sizes[0] + 2 * pad_radius + vertical_offset\r\n    ];\r\n\r\n    if (svg) {\r\n      svg\r\n        .selectAll(\".\" + css_classes[\"tree-container\"])\r\n        .attr(\r\n          \"transform\",\r\n          \"translate (\" +\r\n            pad_radius +\r\n            \",\" +\r\n            (pad_radius + vertical_offset) +\r\n            \")\"\r\n        );\r\n    }\r\n  } else {\r\n\r\n    sizes = [\r\n      sizes[0] +\r\n        (this.options[\"top-bottom-spacing\"] != \"fit-to-size\"\r\n          ? this.pad_height()\r\n          : 0),\r\n      sizes[1] +\r\n        (this.options[\"left-right-spacing\"] != \"fit-to-size\"\r\n          ? this.pad_width()\r\n          : 0)\r\n    ];\r\n\r\n  }\r\n\r\n  if (svg) {\r\n\r\n    if (tr) {\r\n      svg = svg.transition(100);\r\n    }\r\n\r\n    svg.attr(\"height\", sizes[0]).attr(\"width\", sizes[1]);\r\n\r\n  }\r\n\r\n  this.size = sizes;\r\n\r\n  return sizes;\r\n\r\n}\r\n\r\nexport function rescale(scale, attr_name) {\r\n  attr_name = attr_name || \"y_scaled\";\r\n  if (attr_name in this) {\r\n    this[attr_name] *= scale;\r\n  }\r\n}\r\n\r\nexport function triggerRefresh(tree) {\r\n\r\n  var event = new CustomEvent(d3_layout_phylotree_event_id, {\r\n    detail: [\"refresh\", tree]\r\n  });\r\n\r\n  document.dispatchEvent(event);\r\n\r\n}\r\n\r\nexport function countUpdate(tree, counts) {\r\n  var event = new CustomEvent(d3_layout_phylotree_event_id, {\r\n    detail: [\"countUpdate\", counts, tree.countHandler()]\r\n  });\r\n  document.dispatchEvent(event);\r\n}\r\n\r\nexport function d3PhylotreeTriggerLayout(tree) {\r\n  var event = new CustomEvent(d3_layout_phylotree_event_id, {\r\n    detail: [\"layout\", tree, tree.layoutHandler()]\r\n  });\r\n  document.dispatchEvent(event);\r\n}\r\n\r\nexport function d3PhylotreeEventListener(event) {\r\n  switch (event.detail[0]) {\r\n    case \"refresh\":\r\n      event.detail[1].refresh();\r\n      break;\r\n    case \"countUpdate\":\r\n      event.detail[2](event.detail[1]);\r\n      break;\r\n    case \"layout\":\r\n      event.detail[2](event.detail[1]);\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function d3PhylotreeAddEventListener() {\r\n  document.addEventListener(\r\n    d3_layout_phylotree_event_id,\r\n    d3PhylotreeEventListener,\r\n    false\r\n  );\r\n}\r\n\r\nexport function d3PhylotreeSvgTranslate(x) {\r\n  if (x && (x[0] !== null || x[1] !== null))\r\n    return (\r\n      \"translate (\" +\r\n      (x[0] !== null ? x[0] : 0) +\r\n      \",\" +\r\n      (x[1] !== null ? x[1] : 0) +\r\n      \") \"\r\n    );\r\n\r\n  return \"\";\r\n}\r\n\r\nexport function d3PhylotreeSvgRotate(a) {\r\n  if (a !== null) {\r\n    return \"rotate (\" + a + \") \";\r\n  }\r\n  return \"\";\r\n}\r\n","import * as d3 from \"d3\";\r\nimport * as _ from \"underscore\";\r\nimport * as events from \"./events\";\r\nimport { isLeafNode } from \"../nodes\";\r\nimport { isNodeCollapsed, hasHiddenNodes } from \"./nodes\";\r\nimport { predefined_selecters } from \"./options\";\r\n\r\nlet d3_layout_phylotree_context_menu_id = \"d3_layout_phylotree_context_menu\";\r\n\r\nexport function nodeDropdownMenu(node, container, phylotree, options, event) {\r\n  let menu_object = d3\r\n    .select(container)\r\n    .select(\"#\" + d3_layout_phylotree_context_menu_id);\r\n\r\n  if (menu_object.empty()) {\r\n    menu_object = d3\r\n      .select(container)\r\n      .append(\"div\")\r\n      .attr(\"id\", d3_layout_phylotree_context_menu_id)\r\n      .attr(\"class\", \"dropdown-menu\")\r\n      .attr(\"role\", \"menu\");\r\n  }\r\n\r\n  menu_object.selectAll(\"a\").remove();\r\n  menu_object.selectAll(\"h6\").remove();\r\n  menu_object.selectAll(\"div\").remove();\r\n\r\n  if (node) {\r\n    if (\r\n      !_.some([\r\n        Boolean(node.menu_items),\r\n        options[\"hide\"],\r\n        options[\"selectable\"],\r\n        options[\"collapsible\"]\r\n      ]) ||\r\n      !options[\"show-menu\"]\r\n    )\r\n      return;\r\n    if (!isLeafNode(node)) {\r\n      if (options[\"collapsible\"]) {\r\n        menu_object\r\n          .append(\"a\")\r\n          .attr(\"class\", \"dropdown-item\")\r\n          .attr(\"tabindex\", \"-1\")\r\n          .text(isNodeCollapsed(node) ? \"Expand Subtree\" : \"Collapse Subtree\")\r\n          .on(\"click\", d => {\r\n            menu_object.style(\"display\", \"none\");\r\n            this.toggleCollapse(node).update();\r\n          });\r\n        if (options[\"selectable\"]) {\r\n          menu_object.append(\"div\").attr(\"class\", \"dropdown-divider\");\r\n          menu_object\r\n            .append(\"h6\")\r\n            .attr(\"class\", \"dropdown-header\")\r\n            .text(\"Toggle selection\");\r\n        }\r\n      }\r\n\r\n      if (options[\"selectable\"]) {\r\n        menu_object\r\n          .append(\"a\")\r\n          .attr(\"class\", \"dropdown-item\")\r\n          .attr(\"tabindex\", \"-1\")\r\n          .text(\"All descendant branches\")\r\n          .on(\"click\", function(d) {\r\n            menu_object.style(\"display\", \"none\");\r\n            phylotree.modifySelection(\r\n              phylotree.selectAllDescendants(node, true, true)\r\n            );\r\n          });\r\n\r\n        menu_object\r\n          .append(\"a\")\r\n          .attr(\"class\", \"dropdown-item\")\r\n          .attr(\"tabindex\", \"-1\")\r\n          .text(\"All terminal branches\")\r\n          .on(\"click\", function(d) {\r\n            menu_object.style(\"display\", \"none\");\r\n            phylotree.modifySelection(\r\n              phylotree.selectAllDescendants(node, true, false)\r\n            );\r\n          });\r\n\r\n        menu_object\r\n          .append(\"a\")\r\n          .attr(\"class\", \"dropdown-item\")\r\n          .attr(\"tabindex\", \"-1\")\r\n          .text(\"All internal branches\")\r\n          .on(\"click\", function(d) {\r\n            menu_object.style(\"display\", \"none\");\r\n            phylotree.modifySelection(\r\n              phylotree.selectAllDescendants(node, false, true)\r\n            );\r\n          });\r\n      }\r\n    }\r\n\r\n    if (node.parent) {\r\n      if (options[\"selectable\"]) {\r\n        menu_object\r\n          .append(\"a\")\r\n          .attr(\"class\", \"dropdown-item\")\r\n          .attr(\"tabindex\", \"-1\")\r\n          .text(\"Incident branch\")\r\n          .on(\"click\", function(d) {\r\n            menu_object.style(\"display\", \"none\");\r\n            phylotree.modifySelection([node]);\r\n          });\r\n\r\n        menu_object\r\n          .append(\"a\")\r\n          .attr(\"class\", \"dropdown-item\")\r\n          .attr(\"tabindex\", \"-1\")\r\n          .text(\"Path to root\")\r\n          .on(\"click\", d => {\r\n            menu_object.style(\"display\", \"none\");\r\n            this.modifySelection(this.phylotree.pathToRoot(node));\r\n          });\r\n\r\n        if (options[\"reroot\"] || options[\"hide\"]) {\r\n          menu_object.append(\"div\").attr(\"class\", \"dropdown-divider\");\r\n        }\r\n      }\r\n\r\n      if (options[\"reroot\"]) {\r\n        menu_object\r\n          .append(\"a\")\r\n          .attr(\"class\", \"dropdown-item\")\r\n          .attr(\"tabindex\", \"-1\")\r\n          .text(\"Reroot on this node\")\r\n          .on(\"click\", d => {\r\n            menu_object.style(\"display\", \"none\");\r\n            this.phylotree.reroot(node);\r\n            this.update();\r\n          });\r\n      }\r\n\r\n      if (options[\"hide\"]) {\r\n        menu_object\r\n          .append(\"a\")\r\n          .attr(\"class\", \"dropdown-item\")\r\n          .attr(\"tabindex\", \"-1\")\r\n          .text(\"Hide this \" + (isLeafNode(node) ? \"node\" : \"subtree\"))\r\n          .on(\"click\", d => {\r\n            menu_object.style(\"display\", \"none\");\r\n            this.modifySelection([node], \"notshown\", true, true)\r\n              .updateHasHiddenNodes()\r\n              .update();\r\n          });\r\n      }\r\n    }\r\n\r\n    if (hasHiddenNodes(node)) {\r\n      menu_object\r\n        .append(\"a\")\r\n        .attr(\"class\", \"dropdown-item\")\r\n        .attr(\"tabindex\", \"-1\")\r\n        .text(\"Show all descendant nodes\")\r\n        .on(\"click\", function(d) {\r\n          menu_object.style(\"display\", \"none\");\r\n          phylotree\r\n            .modifySelection(\r\n              phylotree.selectAllDescendants(node, true, true),\r\n              \"notshown\",\r\n              true,\r\n              true,\r\n              \"false\"\r\n            )\r\n            .updateHasHiddenNodes()\r\n            .update();\r\n        });\r\n    }\r\n\r\n    // now see if we need to add user defined menus\r\n\r\n    var has_user_elements = [];\r\n    if (\"menu_items\" in node && typeof node[\"menu_items\"] === \"object\") {\r\n      node[\"menu_items\"].forEach(function(d) {\r\n        if (d.length == 3) {\r\n          if (!d[2] || d[2](node)) {\r\n            has_user_elements.push([d[0], d[1]]);\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    if (has_user_elements.length) {\r\n      const show_divider_options = [\r\n        options[\"hide\"],\r\n        options[\"selectable\"],\r\n        options[\"collapsible\"]\r\n      ];\r\n\r\n      if (_.some(show_divider_options)) {\r\n        menu_object.append(\"div\").attr(\"class\", \"dropdown-divider\");\r\n      }\r\n\r\n      has_user_elements.forEach(function(d) {\r\n        menu_object\r\n          .append(\"a\")\r\n          .attr(\"class\", \"dropdown-item\")\r\n          .attr(\"tabindex\", \"-1\")\r\n          .text((d[0])(node)) // eslint-disable-line\r\n          .on(\"click\", _.partial(d[1], node));\r\n      });\r\n    }\r\n\r\n    let tree_container = document.querySelector(container); // eslint-disable-line\r\n    let rect = tree_container.getBoundingClientRect();\r\n   \r\n    menu_object\r\n      .style(\"position\", \"absolute\")\r\n      .style(\"left\", \"\" + (event.clientX - rect.x + 12 ) + \"px\")\r\n      .style(\"top\", \"\" + (event.clientY - rect.y ) + \"px\")\r\n      .style(\"display\", \"block\");\r\n  } else {\r\n    menu_object.style(\"display\", \"none\");\r\n  }\r\n\r\n}\r\n\r\nexport function addCustomMenu(node, name, callback, condition) {\r\n  if (!(\"menu_items\" in node)) {\r\n    node[\"menu_items\"] = [];\r\n  }\r\n  if (\r\n    !node[\"menu_items\"].some(function(d) {\r\n      return d[0] == name && d[1] == callback && d[2] == condition;\r\n    })\r\n  ) {\r\n    node[\"menu_items\"].push([name, callback, condition]);\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * Modify the current selection, via functional programming.\r\n *\r\n * @param {Function} node_selecter A function to apply to each node, which\r\n * determines whether they become part of the current selection. Alternatively,\r\n * if ``restricted-selectable`` mode is enabled, a string describing one of\r\n * the pre-defined restricted-selectable options.\r\n * @param {String} attr (Optional) The selection attribute to modify.\r\n * @param {Boolean} place (Optional) Whether or not ``placenodes`` should be called.\r\n * @param {Boolean} skip_refresh (Optional) Whether or not a refresh is called.\r\n * @param {String} mode (Optional) Can be ``\"toggle\"``, ``\"true\"``, or ``\"false\"``.\r\n * @returns The current ``this``.\r\n *\r\n */\r\nexport function modifySelection(\r\n  node_selecter,\r\n  attr,\r\n  place,\r\n  skip_refresh,\r\n  mode\r\n) {\r\n\r\n  attr = attr || this.selection_attribute_name;\r\n  mode = mode || \"toggle\";\r\n\r\n  // check if node_selecter is a value of pre-defined selecters\r\n\r\n  if (this.options[\"restricted-selectable\"].length) {\r\n    // the selection must be from a list of pre-determined selections\r\n    if (_.contains(_.keys(predefined_selecters), node_selecter)) {\r\n      node_selecter = predefined_selecters[node_selecter];\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  if (\r\n    (this.options[\"restricted-selectable\"] || this.options[\"selectable\"]) &&\r\n    !this.options[\"binary-selectable\"]\r\n  ) {\r\n    var do_refresh = false;\r\n\r\n    if (typeof node_selecter === \"function\") {\r\n      this.links.forEach(function(d) {\r\n        let select_me = node_selecter(d);\r\n        d[attr] = d[attr] || false;\r\n        if (d[attr] != select_me) {\r\n          d[attr] = select_me;\r\n          do_refresh = true;\r\n          d.target[attr] = select_me;\r\n        }\r\n      });\r\n    } else {\r\n      node_selecter.forEach(function(d) {\r\n        var new_value;\r\n        switch (mode) {\r\n          case \"true\":\r\n            new_value = true;\r\n            break;\r\n          case \"false\":\r\n            new_value = false;\r\n            break;\r\n          default:\r\n            new_value = !d[attr];\r\n            break;\r\n        }\r\n\r\n        if (d[attr] != new_value) {\r\n          d[attr] = new_value;\r\n          do_refresh = true;\r\n        }\r\n      });\r\n\r\n      this.links.forEach(function(d) {\r\n        d[attr] = d.target[attr];\r\n      });\r\n    }\r\n\r\n    var counts;\r\n\r\n    if (do_refresh) {\r\n      if (!skip_refresh) {\r\n        events.triggerRefresh(this);\r\n      }\r\n      if (this.countHandler) {\r\n        counts = {};\r\n        counts[attr] = this.links.reduce(function(p, c) {\r\n          return p + (c[attr] ? 1 : 0);\r\n        }, 0);\r\n        events.countUpdate(this, counts, this.countHandler);\r\n      }\r\n\r\n      if (place) {\r\n        this.placenodes();\r\n      }\r\n    }\r\n  } else if (this.options[\"binary-selectable\"]) {\r\n    if (typeof node_selecter === \"function\") {\r\n      this.links.forEach(function(d) {\r\n        var select_me = node_selecter(d);\r\n        d[attr] = d[attr] || false;\r\n\r\n        if (d[attr] != select_me) {\r\n          d[attr] = select_me;\r\n          do_refresh = true;\r\n          d.target[attr] = select_me;\r\n        }\r\n\r\n        this.options[\"attribute-list\"].forEach(function(type) {\r\n          if (type != attr && d[attr] === true) {\r\n            d[type] = false;\r\n            d.target[type] = false;\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      node_selecter.forEach(function(d) {\r\n        var new_value;\r\n        new_value = !d[attr];\r\n\r\n        if (d[attr] != new_value) {\r\n          d[attr] = new_value;\r\n          do_refresh = true;\r\n        }\r\n      });\r\n\r\n      this.links.forEach(function(d) {\r\n        d[attr] = d.target[attr];\r\n        this.options[\"attribute-list\"].forEach(function(type) {\r\n          if (type != attr && d[attr] !== true) {\r\n            d[type] = false;\r\n            d.target[type] = false;\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    if (do_refresh) {\r\n      if (!skip_refresh) {\r\n        events.triggerRefresh(this);\r\n      }\r\n      if (this.countHandler()) {\r\n        counts = {};\r\n        counts[attr] = this.links.reduce(function(p, c) {\r\n          return p + (c[attr] ? 1 : 0);\r\n        }, 0);\r\n        this.countUpdate(this, counts, this.countHandler());\r\n      }\r\n\r\n      if (place) {\r\n        this.placenodes();\r\n      }\r\n    }\r\n  }\r\n\r\n  if (this.selectionCallback && attr != \"tag\") {\r\n    this.selectionCallback(this.getSelection());\r\n  }\r\n\r\n  this.refresh();\r\n  this.update();\r\n  return this;\r\n}\r\n\r\n/**\r\n * Get nodes which are currently selected.\r\n *\r\n * @returns {Array} An array of nodes that match the current selection.\r\n */\r\nexport function getSelection() {\r\n  return this.nodes.filter(d => {\r\n    return d[this.selection_attribute_name];\r\n  });\r\n}\r\n\r\n/**\r\n * Select all descendents of a given node, with options for selecting\r\n * terminal/internal nodes.\r\n *\r\n * @param {Node} node The node whose descendents should be selected.\r\n * @param {Boolean} terminal Whether to include terminal nodes.\r\n * @param {Boolean} internal Whther to include internal nodes.\r\n * @returns {Array} An array of selected nodes.\r\n */\r\nexport function selectAllDescendants(node, terminal, internal) {\r\n  let selection = [];\r\n\r\n  function sel(d) {\r\n    if (isLeafNode(d)) {\r\n      if (terminal) {\r\n        if (d != node) selection.push(d);\r\n      }\r\n    } else {\r\n      if (internal) {\r\n        if (d != node) selection.push(d);\r\n      }\r\n      d.children.forEach(sel);\r\n    }\r\n  }\r\n\r\n  sel(node);\r\n  return selection;\r\n}\r\n\r\n/**\r\n * Getter/setter for the selection callback. This function is called\r\n * every time the current selection is modified, and its argument is\r\n * an array of nodes that make up the current selection.\r\n *\r\n * @param {Function} callback (Optional) The selection callback function.\r\n * @returns The current ``selectionCallback`` if getting, or the current ``this`` if setting.\r\n */\r\nexport function selectionCallback(callback) {\r\n  if (!callback) return this.selectionCallback;\r\n  this.selectionCallback = callback;\r\n  return this;\r\n}\r\n","import * as d3 from \"d3\";\r\nimport * as _ from \"underscore\";\r\n\r\nimport { drawArc, cartesianToPolar, arcSegmentPlacer } from \"./radial\";\r\nimport { default as draw_line, lineSegmentPlacer } from \"./cartesian\";\r\nimport { isLeafNode } from \"../nodes\";\r\nimport { xCoord, yCoord } from \"./coordinates\";\r\nimport * as clades from \"./clades\";\r\nimport * as render_nodes from \"./nodes\";\r\nimport * as render_edges from \"./edges\";\r\nimport * as events from \"./events\";\r\nimport { css_classes } from \"./options\";\r\nimport * as opt from \"./options\";\r\nimport * as menus from \"./menus\";\r\n\r\n// replacement for d3.functor\r\nfunction constant(x) {\r\n  return function() {\r\n    return x;\r\n  };\r\n}\r\n\r\nclass TreeRender {\r\n  constructor(phylotree, options = {}) {\r\n    this.css_classes = css_classes;\r\n    this.phylotree = phylotree;\r\n    this.container = options.container;\r\n    this.separation = function(_node, _previous) {\r\n      return 0;\r\n    };\r\n\r\n    this._nodeLabel = this.defNodeLabel;\r\n    this.svg = null;\r\n    this.selectionCallback = null;\r\n    this.scales = [1, 1];\r\n    this.size = [1, 1];\r\n    this.fixed_width = [14, 30];\r\n    this.font_size = 12;\r\n    this.scale_bar_font_size = 12;\r\n    this.offsets = [0, this.font_size / 2];\r\n\r\n    this.draw_branch = draw_line;\r\n    this.draw_scale_bar = null;\r\n    this.edge_placer = lineSegmentPlacer;\r\n    this.count_listener_handler = function() {};\r\n    this.layout_listener_handler = function() {};\r\n    this.node_styler = undefined;\r\n    this.edge_styler = undefined;\r\n    this.shown_font_size = this.font_size;\r\n    this.selection_attribute_name = \"selected\";\r\n    this.right_most_leaf = 0;\r\n    this.label_width = 0;\r\n    this.radial_center = 0;\r\n    this.radius = 1;\r\n    this.radius_pad_for_bubbles = 0;\r\n    this.rescale_nodeSpan = 1;\r\n    this.relative_nodeSpan = function(_node) {\r\n      return this.nodeSpan(_node) / this.rescale_nodeSpan;\r\n    };\r\n\r\n    let default_options = {\r\n      layout: \"left-to-right\",\r\n      logger: console,\r\n      branches: \"step\",\r\n      scaling: true,\r\n      bootstrap: false,\r\n      \"color-fill\": true,\r\n      \"internal-names\": false,\r\n      selectable: true,\r\n      // restricted-selectable can take an array of predetermined\r\n      // selecters that are defined in phylotree.predefined_selecters\r\n      // only the defined functions will be allowed when selecting\r\n      // branches\r\n      \"restricted-selectable\": false,\r\n      collapsible: true,\r\n      \"left-right-spacing\": \"fixed-step\", //'fit-to-size',\r\n      \"top-bottom-spacing\": \"fixed-step\",\r\n      \"left-offset\": 0,\r\n      \"show-scale\": \"top\",\r\n      // currently not implemented to support any other positioning\r\n      \"draw-size-bubbles\": false,\r\n      \"bubble-styler\": this.radius_pad_for_bubbles,\r\n      \"binary-selectable\": false,\r\n      \"is-radial\": false,\r\n      \"attribute-list\": [],\r\n      \"max-radius\": 768,\r\n      \"annular-limit\": 0.38196601125010515,\r\n      compression: 0.2,\r\n      \"align-tips\": false,\r\n      \"maximum-per-node-spacing\": 100,\r\n      \"minimum-per-node-spacing\": 2,\r\n      \"maximum-per-level-spacing\": 100,\r\n      \"minimum-per-level-spacing\": 10,\r\n      node_circle_size: constant(3),\r\n      transitions: null,\r\n      brush: true,\r\n      reroot: true,\r\n      hide: true,\r\n      \"label-nodes-with-name\": false,\r\n      zoom: false,\r\n      \"show-menu\": true,\r\n      \"show-labels\": true,\r\n      \"node-styler\": null,\r\n      \"edge-styler\": null,\r\n      \"node-span\": null\r\n    };\r\n\r\n    this.ensure_size_is_in_px = function(value) {\r\n      return typeof value === \"number\" ? value + \"px\" : value;\r\n    };\r\n\r\n    this.options = _.defaults(options, default_options);\r\n\r\n    this.width = this.options.width || 800;\r\n    this.height = this.options.height || 600;\r\n\r\n    this.node_styler = this.options['node-styler'];\r\n    this.edge_styler = this.options['edge-styler'];\r\n\r\n    this.nodeSpan = this.options['node-span'];\r\n\r\n    if(!this.nodeSpan) {\r\n      this.nodeSpan = function(_node) {\r\n        return 1;\r\n      };\r\n    }\r\n\r\n    this.rescale_nodeSpan =\r\n      this.phylotree.nodes.children\r\n        .map(d => {\r\n          if (isLeafNode(d) || this.showInternalName(d))\r\n            return this.nodeSpan(d);\r\n        })\r\n        .reduce(function(p, c) {\r\n          return Math.min(c, p || 1e200);\r\n        }, null) || 1;\r\n\r\n    this.initialize_svg(this.container);\r\n    this.links = this.phylotree.nodes.links();\r\n    this.initializeEdgeLabels();\r\n    this.update();\r\n    events.d3PhylotreeAddEventListener();\r\n  }\r\n\r\n  pad_height() {\r\n    if (this.draw_scale_bar) {\r\n      return this.scale_bar_font_size + 25;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  pad_width() {\r\n    // reset label_width\r\n    this.label_width = this._label_width(this.shown_font_size);\r\n\r\n    const _label_width = this.options[\"show-labels\"] ? this.label_width : 0;\r\n    return this.offsets[1] + this.options[\"left-offset\"] + _label_width;\r\n  }\r\n\r\n  /**\r\n   * Collapses a given node.\r\n   *\r\n   * @param {Node} node A node to be collapsed.\r\n   */\r\n  collapse_node(n) {\r\n    if (!render_nodes.isNodeCollapsed(n)) {\r\n      n.collapsed = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get or set the size of tree in pixels.\r\n   *\r\n   * @param {Array} attr (optional) An array of the form ``[height, width]``.\r\n   * @returns {Phylotree} The current ``size`` array if getting, or the current ``phylotree``\r\n   * if setting.\r\n   */\r\n  set_size(attr) {\r\n    if (!arguments.length) {\r\n      return this.size;\r\n    }\r\n\r\n    let phylo_attr = attr;\r\n\r\n    if (this.options[\"top-bottom-spacing\"] != \"fixed-step\") {\r\n      this.size[0] = phylo_attr[0];\r\n    }\r\n    if (this.options[\"left-right-spacing\"] != \"fixed-step\") {\r\n      this.size[1] = phylo_attr[1];\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Getter/setter for the SVG element for the Phylotree to be rendered in.\r\n   *\r\n   * @param {d3-selection} svg_element (Optional) SVG element to render within, selected by D3.\r\n   * @returns The selected SVG element if getting, or the current ``phylotree`` if setting.`\r\n   */\r\n  initialize_svg(svg_element) {\r\n    //if (!arguments.length) return this.svg;\r\n\r\n    if (this.svg !== svg_element) {\r\n      d3.select(svg_element)\r\n        .select(\"svg\")\r\n        .remove();\r\n\r\n      this.svg = d3\r\n        .create(\"svg\")\r\n        .attr(\"width\", this.width)\r\n        .attr(\"height\", this.height);\r\n\r\n      this.set_size([this.height, this.width]);\r\n\r\n      if (this.css_classes[\"tree-container\"] == \"phylotree-container\") {\r\n        this.svg.selectAll(\"*\").remove();\r\n        this.svg.append(\"defs\");\r\n      }\r\n\r\n      d3.select(this.container).on(\r\n        \"click\",\r\n        d => {\r\n          this.handle_node_click(null);\r\n        },\r\n        true\r\n      );\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  update_layout(new_json, do_hierarchy) {\r\n    if (do_hierarchy) {\r\n      this.nodes = d3.hierarchy(new_json);\r\n      this.nodes.each(function(d) {\r\n        d.id = null;\r\n      });\r\n    }\r\n\r\n    this.update();\r\n    this.syncEdgeLabels();\r\n  }\r\n\r\n  /**\r\n   * Update the current phylotree, i.e., alter the svg\r\n   * elements.\r\n   *\r\n   * @param {Boolean} transitions (Optional) Toggle whether transitions should be shown.\r\n   * @returns The current ``phylotree``.\r\n   */\r\n  update(transitions) {\r\n\r\n    var self = this;\r\n\r\n    //if (!this.svg) return this;\r\n\r\n    this.placenodes();\r\n\r\n    transitions = this.transitions(transitions);\r\n\r\n    let node_id = 0;\r\n\r\n    let enclosure = this.svg\r\n      .selectAll(\".\" + css_classes[\"tree-container\"])\r\n      .data([0]);\r\n\r\n    enclosure = enclosure\r\n      .enter()\r\n      .append(\"g\")\r\n      .attr(\"class\", css_classes[\"tree-container\"])\r\n      .merge(enclosure)\r\n      .attr(\"transform\", d => {\r\n        return this.d3PhylotreeSvgTranslate([\r\n          this.offsets[1] + this.options[\"left-offset\"],\r\n          this.pad_height()\r\n        ]);\r\n      });\r\n\r\n    if (this.draw_scale_bar) {\r\n      let scale_bar = this.svg\r\n        .selectAll(\".\" + css_classes[\"tree-scale-bar\"])\r\n        .data([0]);\r\n\r\n      scale_bar\r\n        .enter()\r\n        .append(\"g\")\r\n        .attr(\"class\", css_classes[\"tree-scale-bar\"])\r\n        .style(\"font-size\", this.ensure_size_is_in_px(this.scale_bar_font_size))\r\n        .merge(scale_bar)\r\n        .attr(\"transform\", d => {\r\n          return this.d3PhylotreeSvgTranslate([\r\n            this.offsets[1] + this.options[\"left-offset\"],\r\n            this.pad_height() - 10\r\n          ]);\r\n        })\r\n        .call(this.draw_scale_bar);\r\n\r\n      scale_bar.selectAll(\"text\").style(\"text-anchor\", \"end\");\r\n    } else {\r\n      this.svg.selectAll(\".\" + css_classes[\"tree-scale-bar\"]).remove();\r\n    }\r\n\r\n    enclosure = this.svg\r\n      .selectAll(\".\" + css_classes[\"tree-container\"])\r\n      .data([0]);\r\n\r\n    this.updateCollapsedClades(transitions);\r\n\r\n    let drawn_links = enclosure\r\n      .selectAll(render_edges.edgeCssSelectors(css_classes))\r\n      .data(this.links.filter(render_edges.edgeVisible), d => {\r\n        return d.target.id || (d.target.id = ++node_id);\r\n      });\r\n\r\n    if (transitions) {\r\n      drawn_links.exit().remove();\r\n    } else {\r\n      drawn_links.exit().remove();\r\n    }\r\n\r\n    drawn_links = drawn_links\r\n      .enter()\r\n      .insert(\"path\", \":first-child\")\r\n      .merge(drawn_links)\r\n      .each(function(d) {\r\n        self.drawEdge(this, d, transitions);\r\n      });\r\n\r\n    let drawn_nodes = enclosure\r\n      .selectAll(render_nodes.nodeCssSelectors(css_classes))\r\n      .data(\r\n        this.phylotree.nodes.descendants().filter(render_nodes.nodeVisible),\r\n        d => {\r\n          return d.id || (d.id = ++node_id);\r\n        }\r\n      );\r\n\r\n    drawn_nodes.exit().remove();\r\n\r\n    drawn_nodes = drawn_nodes\r\n      .enter()\r\n      .append(\"g\")\r\n      .attr(\"class\", this.reclassNode)\r\n      .merge(drawn_nodes)\r\n      .attr(\"transform\", d => {\r\n        const should_shift =\r\n          this.options[\"layout\"] == \"right-to-left\" && isLeafNode(d);\r\n\r\n        d.screen_x = xCoord(d);\r\n        d.screen_y = yCoord(d);\r\n\r\n        return this.d3PhylotreeSvgTranslate([\r\n          should_shift ? 0 : d.screen_x,\r\n          d.screen_y\r\n        ]);\r\n      })\r\n      .each(function(d) {\r\n        self.drawNode(this, d, transitions);\r\n      })\r\n      .attr(\"transform\", d => {\r\n        if (!_.isUndefined(d.screen_x) && !_.isUndefined(d.screen_y)) {\r\n          return \"translate(\" + d.screen_x + \",\" + d.screen_y + \")\";\r\n        }\r\n      });\r\n\r\n    if (this.options[\"label-nodes-with-name\"]) {\r\n      drawn_nodes = drawn_nodes.attr(\"id\", d => {\r\n        return \"node-\" + d.name;\r\n      });\r\n    }\r\n\r\n    this.resizeSvg(this.phylotree, this.svg, transitions);\r\n\r\n    if (this.options[\"brush\"]) {\r\n      var brush = enclosure\r\n        .selectAll(\".\" + css_classes[\"tree-selection-brush\"])\r\n        .data([0])\r\n        .enter()\r\n        .insert(\"g\", \":first-child\")\r\n        .attr(\"class\", css_classes[\"tree-selection-brush\"]);\r\n\r\n      var brush_object = d3\r\n        .brush()\r\n        .on(\"brush\", (event, d) => {\r\n          var extent = event.selection,\r\n            shown_links = this.links.filter(render_edges.edgeVisible);\r\n          var selected_links = shown_links\r\n              .filter((d, i) => {\r\n                return (\r\n                  d.source.screen_x >= extent[0][0] &&\r\n                  d.source.screen_x <= extent[1][0] &&\r\n                  d.source.screen_y >= extent[0][1] &&\r\n                  d.source.screen_y <= extent[1][1] &&\r\n                  d.target.screen_x >= extent[0][0] &&\r\n                  d.target.screen_x <= extent[1][0] &&\r\n                  d.target.screen_y >= extent[0][1] &&\r\n                  d.target.screen_y <= extent[1][1]\r\n                );\r\n              })\r\n              .map(d => {\r\n                return d.target;\r\n              });\r\n\r\n          this.modifySelection(\r\n\r\n            this.phylotree.links.map(d => {\r\n              return d.target;\r\n            }),\r\n            \"tag\",\r\n            false,\r\n            selected_links.length > 0,\r\n            \"false\"\r\n          );\r\n\r\n          this.modifySelection(selected_links, \"tag\", false, false, \"true\");\r\n\r\n        })\r\n        .on(\"end\", () => {\r\n          //brush.call(d3.event.target.clear());\r\n        });\r\n\r\n      brush.call(brush_object);\r\n    }\r\n\r\n    this.syncEdgeLabels();\r\n\r\n    if (this.options[\"zoom\"]) {\r\n      let zoom = d3\r\n        .zoom()\r\n        .scaleExtent([0.1, 10])\r\n        .on(\"zoom\", (event) => {\r\n\r\n          d3.select(\".\" + css_classes[\"tree-container\"]).attr(\"transform\", d => {\r\n            let toTransform = event.transform;\r\n            return toTransform;\r\n          });\r\n\r\n          // Give some extra room\r\n          d3.select(\".\" + css_classes[\"tree-scale-bar\"]).attr(\"transform\", d => {\r\n            let toTransform = event.transform;\r\n            toTransform.y -= 10; \r\n            return toTransform;\r\n          });\r\n          \r\n        });\r\n\r\n      this.svg.call(zoom);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  _handle_single_node_layout(\r\n    a_node\r\n  ) {\r\n    let _nodeSpan = this.nodeSpan(a_node) / this.rescale_nodeSpan;\r\n    // compute the relative size of nodes (0,1)\r\n    // sum over all nodes is 1\r\n    this.x = a_node.x =\r\n      this.x +\r\n      this.separation(this.last_node, a_node) +\r\n      (this.last_span + _nodeSpan) * 0.5;\r\n      \r\n \r\n    // separation is a user-settable callback to add additional spacing on nodes\r\n    this._extents[1][1] = Math.max(this._extents[1][1], a_node.y);\r\n    this._extents[1][0] = Math.min(\r\n      this._extents[1][0],\r\n      a_node.y - _nodeSpan * 0.5\r\n    );\r\n    \r\n\r\n    if (this.is_under_collapsed_parent) {\r\n       this._extents[0][1] = Math.max(\r\n        this._extents[0][1],\r\n        this.save_x +\r\n          (a_node.x - this.save_x) * this.options[\"compression\"] +\r\n          this.save_span +\r\n          (_nodeSpan * 0.5 + this.separation(this.last_node, a_node)) *\r\n            this.options[\"compression\"]\r\n      );      \r\n    } else {\r\n      this._extents[0][1] = Math.max(\r\n        this._extents[0][1],\r\n        this.x + _nodeSpan * 0.5 + this.separation(this.last_node, a_node)\r\n      );\r\n    }\r\n\r\n\r\n    this.last_node = a_node;\r\n    this.last_span = _nodeSpan;\r\n    \r\n  }\r\n\r\n  tree_layout(a_node) {\r\n    /**\r\n            for each node: \r\n                y: the y coordinate is root to tip\r\n                    (left to right in cladogram layout, radius is radial layout\r\n                x : the x coordinate is top-most to bottom-most \r\n                    (top to bottom in cladogram layout, angle in radial layout)\r\n                \r\n                \r\n         @return the x-coordinate of a_node or undefined in the node is not displayed\r\n                 (hidden or under a collapsed node)\r\n        */\r\n\r\n\r\n    // do not layout hidden nodes\r\n    if (render_nodes.nodeNotshown(a_node)) {\r\n      return undefined;\r\n    }\r\n\r\n    let is_leaf = isLeafNode(a_node);\r\n\r\n    // the next four members are radial layout options\r\n    a_node.text_angle = null; // the angle at which text is being laid out\r\n    a_node.text_align = null; // css alignment option for node labels\r\n    a_node.radius = null; // radial layout radius\r\n    a_node.angle = null; // radial layout angle (in radians)\r\n\r\n    /** determine the root-to-tip location of this node;\r\n            \r\n      the root node receives the co-ordinate of 0\r\n      \r\n      if the tree has branch lengths, then the placement of each node is simply the \r\n      total branch length to the root\r\n      \r\n      if the tree has no branch lengths, all leaves get the same depth (\"number of internal nodes on the deepest path\")\r\n      and all internal nodes get the depth in integer units of the # of internal nodes on the path to the root + 1\r\n        \r\n    */\r\n\r\n    let undef_BL = false;\r\n\r\n    /** _extents computes a bounding box for the tree (initially NOT in screen \r\n            coordinates)\r\n\r\n        all account for node sizes\r\n\r\n        _extents [1][0] -- the minimum x coordinate (breadth)\r\n        _extents [1][1] -- the maximum y coordinate (breadth)\r\n        _extents [1][0] -- the minimum y coordinate (root-to-tip, or depthwise)\r\n        _extents [1][1] -- the maximum y coordinate (root-to-tip, or depthwise)\r\n\r\n    */\r\n\r\n\r\n    // last node laid out in the top bottom hierarchy\r\n\r\n    if (a_node[\"parent\"]) {\r\n      if (this.do_scaling) {\r\n        if (undef_BL) {\r\n          return 0;\r\n        }\r\n\r\n        a_node.y = this.phylotree.branch_length_accessor(a_node);\r\n\r\n        if (typeof a_node.y === \"undefined\") {\r\n          undef_BL = true;\r\n          return 0;\r\n        }\r\n        a_node.y += a_node.parent.y;\r\n      } else {\r\n        a_node.y = is_leaf ? this.max_depth : a_node.depth;\r\n      }\r\n    } else {\r\n      this.x = 0.0;\r\n      // the span of the last node laid out in the top to bottom hierarchy\r\n      a_node.y = 0.0;\r\n      this.last_node = null;\r\n      this.last_span = 0.0;\r\n      this._extents = [[0, 0], [0, 0]];\r\n    }\r\n\r\n    /** the next block has to do with top-to-bottom spacing of nodes **/\r\n\r\n    if (is_leaf) {\r\n      // displayed internal nodes are handled in `process_internal_node`\r\n      this._handle_single_node_layout(\r\n        a_node\r\n      );\r\n    }\r\n\r\n    if (!is_leaf) {\r\n      // for internal nodes\r\n      if (\r\n        render_nodes.isNodeCollapsed(a_node) &&\r\n        !this.is_under_collapsed_parent\r\n      ) {\r\n        // collapsed node\r\n        this.save_x = this.x;\r\n        this.save_span = this.last_span * 0.5;\r\n        this.is_under_collapsed_parent = true;\r\n        this.process_internal_node(a_node);\r\n        this.is_under_collapsed_parent = false;\r\n \r\n        if (typeof a_node.x === \"number\") {\r\n          a_node.x =\r\n            this.save_x +\r\n            (a_node.x -this.save_x) * this.options[\"compression\"] +\r\n            this.save_span;\r\n\r\n          a_node.collapsed = [[a_node.x, a_node.y]];\r\n\r\n          var map_me = n => {\r\n            n.hidden = true;\r\n\r\n            if (isLeafNode(n)) {            \r\n              this.x = n.x =\r\n                this.save_x +\r\n                (n.x - this.save_x) * this.options[\"compression\"] +\r\n                this.save_span;\r\n\r\n              a_node.collapsed.push([n.x, n.y]);             \r\n            } else {\r\n              n.children.map(map_me);\r\n            }\r\n          };\r\n\r\n          this.x = this.save_x;\r\n          map_me(a_node);\r\n         \r\n\r\n          a_node.collapsed.splice(1, 0, [this.save_x, a_node.y]);\r\n          a_node.collapsed.push([this.x, a_node.y]);\r\n          a_node.collapsed.push([a_node.x, a_node.y]);\r\n          a_node.hidden = false;\r\n        }\r\n      } else {\r\n        // normal node, or under a collapsed parent\r\n        this.process_internal_node(a_node);\r\n      }\r\n    }\r\n\r\n    return a_node.x;\r\n  }\r\n\r\n  process_internal_node(a_node) {\r\n    /** \r\n            decide if the node will be shown, and compute its top-to-bottom (breadthwise)\r\n            placement \r\n        */\r\n\r\n    let count_undefined = 0;\r\n\r\n    if (this.showInternalName(a_node)) {\r\n      // do in-order traversal to allow for proper internal node spacing\r\n      // (x/2) >> 0 is integer division\r\n      let half_way = (a_node.children.length / 2) >> 0;\r\n      let displayed_children = 0;\r\n      let managed_to_display = false;\r\n\r\n      for (let child_id = 0; child_id < a_node.children.length; child_id++) {\r\n        let child_x = this.tree_layout(a_node.children[child_id]);//.bind(this);\r\n\r\n        if (typeof child_x == \"number\") {\r\n          displayed_children++;\r\n        }\r\n\r\n        if (displayed_children >= half_way && !managed_to_display) {\r\n          this._handle_single_node_layout(a_node);\r\n          managed_to_display = true;\r\n        }\r\n      }\r\n\r\n      if (displayed_children == 0) {\r\n        a_node.notshown = true;\r\n        a_node.x = undefined;\r\n      } else {\r\n        if (!managed_to_display) {\r\n          this._handle_single_node_layout(a_node);\r\n        }\r\n      }\r\n    } else {\r\n      // postorder layout\r\n      a_node.x = a_node.children\r\n        .map(this.tree_layout.bind(this))\r\n        .reduce((a, b) => {\r\n          if (typeof b == \"number\") return a + b;\r\n          count_undefined += 1;\r\n          return a;\r\n        }, 0.0);\r\n\r\n      if (count_undefined == a_node.children.length) {\r\n        a_node.notshown = true;\r\n        a_node.x = undefined;\r\n      } else {\r\n        a_node.x /= a_node.children.length - count_undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  do_lr(at_least_one_dimension_fixed) {\r\n    if (this.radial() && at_least_one_dimension_fixed) {\r\n      this.offsets[1] = 0;\r\n    }\r\n\r\n    if (this.options[\"left-right-spacing\"] == \"fixed-step\") {\r\n      this.size[1] = this.max_depth * this.fixed_width[1];\r\n\r\n      this.scales[1] = \r\n        (this.size[1] - this.offsets[1] - this.options[\"left-offset\"]) /\r\n        this._extents[1][1];\r\n\r\n      this.label_width = this._label_width(this.shown_font_size);\r\n\r\n      if (this.radial()) {\r\n        this.label_width *= 2;\r\n      }\r\n    } else {\r\n      this.label_width = this._label_width(this.shown_font_size);\r\n\r\n      at_least_one_dimension_fixed = true;\r\n\r\n      let available_width =\r\n        this.size[1] - this.offsets[1] - this.options[\"left-offset\"];\r\n\r\n      if (available_width * 0.5 < this.label_width) {\r\n        this.shown_font_size *= (available_width * 0.5) / this.label_width;\r\n        this.label_width = available_width * 0.5;\r\n      }\r\n\r\n      this.scales[1] =\r\n        (this.size[1] -\r\n          this.offsets[1] -\r\n          this.options[\"left-offset\"] -\r\n          this.label_width) /\r\n        this._extents[1][1];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Place the current nodes, i.e., determine their coordinates based\r\n   * on current settings.\r\n   *\r\n   * @returns The current ``phylotree``.\r\n   */\r\n  placenodes() {\r\n    this._extents = [\r\n      [0, 0],\r\n      [0, 0]\r\n    ];\r\n\r\n    this.x = 0.0;\r\n    this.last_span = 0.0;\r\n    //let x = 0.0,\r\n    //  last_span = 0;\r\n    \r\n    this.last_node = null;\r\n    this.last_span = 0.0;\r\n\r\n    (this.save_x = this.x), (this.save_span = this.last_span * 0.5);\r\n\r\n    this.do_scaling = this.options[\"scaling\"];\r\n    let undef_BL = false;\r\n\r\n    this.is_under_collapsed_parent = false;\r\n    this.max_depth = 1;\r\n    \r\n    // Set initial x\r\n    this.phylotree.nodes.x = this.tree_layout(\r\n      this.phylotree.nodes,\r\n      this.do_scaling\r\n    );\r\n\r\n    this.max_depth = d3.max(this.phylotree.nodes.descendants(), n => {\r\n      return n.depth;\r\n    });\r\n\r\n    if (this.do_scaling && undef_BL) {\r\n      // requested scaling, but some branches had no branch lengths\r\n      // redo layout without branch lengths\r\n      this.do_scaling = false;\r\n      this.phylotree.nodes.x = this.tree_layout(this.phylotree.nodes);\r\n    }\r\n\r\n    let at_least_one_dimension_fixed = false;\r\n\r\n    this.draw_scale_bar = this.options[\"show-scale\"] && this.do_scaling;\r\n\r\n    // this is a hack so that phylotree.pad_height would return ruler spacing\r\n    this.offsets[1] = Math.max(\r\n      this.font_size,\r\n      -this._extents[1][0] * this.fixed_width[0]\r\n    );\r\n\r\n    if (this.options[\"top-bottom-spacing\"] == \"fixed-step\") {\r\n      this.size[0] = this._extents[0][1] * this.fixed_width[0];\r\n      this.scales[0] = this.fixed_width[0];\r\n    } else {\r\n      this.scales[0] = (this.size[0] - this.pad_height()) / this._extents[0][1];\r\n      at_least_one_dimension_fixed = true;\r\n    }\r\n\r\n    this.shown_font_size = Math.min(this.font_size, this.scales[0]);\r\n\r\n    if (this.radial()) {\r\n      // map the nodes to polar coordinates\r\n      this.draw_branch = _.partial(drawArc, this.radial_center);\r\n      this.edge_placer = arcSegmentPlacer;\r\n\r\n      let last_child_angle = null,\r\n        last_circ_position = null,\r\n        last_child_radius = null,\r\n        min_radius = 0,\r\n        effective_span = this._extents[0][1] * this.scales[0];\r\n\r\n      let compute_distance = function(r1, r2, a1, a2, annular_shift) {\r\n        annular_shift = annular_shift || 0;\r\n        return Math.sqrt(\r\n          (r2 - r1) * (r2 - r1) +\r\n            2 *\r\n              (r1 + annular_shift) *\r\n              (r2 + annular_shift) *\r\n              (1 - Math.cos(a1 - a2))\r\n        );\r\n      };\r\n\r\n      let max_r = 0;\r\n\r\n      this.phylotree.nodes.each(d => {\r\n        let my_circ_position = d.x * this.scales[0];\r\n        d.angle = (2 * Math.PI * my_circ_position) / effective_span;\r\n        d.text_angle = d.angle - Math.PI / 2;\r\n        d.text_angle = d.text_angle > 0 && d.text_angle < Math.PI;\r\n        d.text_align = d.text_angle ? \"end\" : \"start\";\r\n        d.text_angle = (d.text_angle ? 180 : 0) + (d.angle * 180) / Math.PI;\r\n      });\r\n\r\n      this.do_lr(at_least_one_dimension_fixed);\r\n\r\n      this.phylotree.nodes.each(d => {\r\n        d.radius = (d.y * this.scales[1]) / this.size[1];\r\n        max_r = Math.max(d.radius, max_r);\r\n      });\r\n\r\n      let annular_shift = 0;\r\n\r\n      this.phylotree.nodes.each(d => {\r\n        if (!d.children) {\r\n          let my_circ_position = d.x * this.scales[0];\r\n          if (last_child_angle !== null) {\r\n            let required_spacing = my_circ_position - last_circ_position,\r\n              radial_dist = compute_distance(\r\n                d.radius,\r\n                last_child_radius,\r\n                d.angle,\r\n                last_child_angle,\r\n                annular_shift\r\n              );\r\n\r\n            let local_mr =\r\n              radial_dist > 0\r\n                ? required_spacing / radial_dist\r\n                : 10 * this.options[\"max-radius\"];\r\n\r\n            if (local_mr > this.options[\"max-radius\"]) {\r\n              // adjust the annular shift\r\n              let dd = required_spacing / this.options[\"max-radius\"],\r\n                b = d.radius + last_child_radius,\r\n                c =\r\n                  d.radius * last_child_radius -\r\n                  (dd * dd -\r\n                    (last_child_radius - d.radius) *\r\n                      (last_child_radius - d.radius)) /\r\n                    2 /\r\n                    (1 - Math.cos(last_child_angle - d.angle)),\r\n                st = Math.sqrt(b * b - 4 * c);\r\n\r\n              annular_shift = Math.min(\r\n                this.options[\"annular-limit\"] * max_r,\r\n                (-b + st) / 2\r\n              );\r\n              min_radius = this.options[\"max-radius\"];\r\n            } else {\r\n              min_radius = Math.max(min_radius, local_mr);\r\n            }\r\n          }\r\n\r\n          last_child_angle = d.angle;\r\n          last_circ_position = my_circ_position;\r\n          last_child_radius = d.radius;\r\n        }\r\n      });\r\n\r\n      this.radius = Math.min(\r\n        this.options[\"max-radius\"],\r\n        Math.max(effective_span / 2 / Math.PI, min_radius)\r\n      );\r\n\r\n      if (at_least_one_dimension_fixed) {\r\n        this.radius = Math.min(\r\n          this.radius,\r\n          (Math.min(effective_span, this._extents[1][1] * this.scales[1]) -\r\n            this.label_width) *\r\n            0.5 -\r\n            this.radius * annular_shift\r\n        );\r\n      }\r\n\r\n      this.radial_center = this.radius_pad_for_bubbles = this.radius;\r\n      this.draw_branch = _.partial(drawArc, this.radial_center);\r\n\r\n      let scaler = 1;\r\n\r\n      if (annular_shift) {\r\n        scaler = max_r / (max_r + annular_shift);\r\n        this.radius *= scaler;\r\n      }\r\n\r\n      this.phylotree.nodes.each(d => {\r\n        cartesianToPolar(\r\n          d,\r\n          this.radius,\r\n          annular_shift,\r\n          this.radial_center,\r\n          this.scales,\r\n          this.size\r\n        );\r\n\r\n        max_r = Math.max(max_r, d.radius);\r\n\r\n        if (this.options[\"draw-size-bubbles\"]) {\r\n          this.radius_pad_for_bubbles = Math.max(\r\n            this.radius_pad_for_bubbles,\r\n            d.radius + this.nodeBubbleSize(d)\r\n          );\r\n        } else {\r\n          this.radius_pad_for_bubbles = Math.max(\r\n            this.radius_pad_for_bubbles,\r\n            d.radius\r\n          );\r\n        }\r\n\r\n        if (d.collapsed) {\r\n          d.collapsed = d.collapsed.map(p => {\r\n            let z = {};\r\n            z.x = p[0];\r\n            z.y = p[1];\r\n            z = cartesianToPolar(\r\n              z,\r\n              this.radius,\r\n              annular_shift,\r\n              this.radial_center,\r\n              this.scales,\r\n              this.size\r\n            );\r\n            return [z.x, z.y];\r\n          });\r\n\r\n          let last_point = d.collapsed[1];\r\n\r\n          d.collapsed = d.collapsed.filter(function(p, i) {\r\n            if (i < 3 || i > d.collapsed.length - 4) return true;\r\n            if (\r\n              Math.sqrt(\r\n                Math.pow(p[0] - last_point[0], 2) +\r\n                  Math.pow(p[1] - last_point[1], 2)\r\n              ) > 3\r\n            ) {\r\n              last_point = p;\r\n              return true;\r\n            }\r\n            return false;\r\n          });\r\n        }\r\n      });\r\n\r\n      this.size[0] = this.radial_center + this.radius / scaler;\r\n      this.size[1] = this.radial_center + this.radius / scaler;\r\n    } else {\r\nthis.do_lr();\r\n\r\n      this.draw_branch = draw_line;\r\n      this.edge_placer = lineSegmentPlacer;\r\n      this.right_most_leaf = 0;\r\n\r\n      this.phylotree.nodes.each(d => {\r\n\r\n        d.x *= this.scales[0];\r\n        d.y *= this.scales[1]*.8;\r\n\r\n        if (this.options[\"layout\"] == \"right-to-left\") {   \r\n          d.y = this._extents[1][1] * this.scales[1] - d.y;\r\n        }\r\n\r\n\r\n        if (isLeafNode(d)) {\r\n          this.right_most_leaf = Math.max(\r\n            this.right_most_leaf,\r\n            d.y + this.nodeBubbleSize(d)\r\n          );\r\n        }\r\n\r\n        if (d.collapsed) {\r\n          d.collapsed.forEach(p => {\r\n            p[0] *= this.scales[0];\r\n            p[1] *= this.scales[1]*.8;\r\n          });\r\n\r\n          let last_x = d.collapsed[1][0];\r\n\r\n          d.collapsed = d.collapsed.filter(function(p, i) {\r\n            if (i < 3 || i > d.collapsed.length - 4) return true;\r\n            if (p[0] - last_x > 3) {\r\n              last_x = p[0];\r\n              return true;\r\n            }\r\n            return false;\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    if (this.draw_scale_bar) {\r\n      let domain_limit, range_limit;\r\n\r\n      if (this.radial()) {\r\n        range_limit = Math.min(this.radius / 5, 50);\r\n        domain_limit = Math.pow(\r\n          10,\r\n          Math.ceil(\r\n            Math.log((this._extents[1][1] * range_limit) / this.radius) /\r\n              Math.log(10)\r\n          )\r\n        );\r\n        \r\n\r\n        range_limit = domain_limit * (this.radius / this._extents[1][1]);\r\n\r\n        if (range_limit < 30) {\r\n          let stretch = Math.ceil(30 / range_limit);\r\n          range_limit *= stretch;\r\n          domain_limit *= stretch;\r\n        }\r\n      } else {\r\n        domain_limit = this._extents[1][1];\r\n\r\n        range_limit =\r\n          this.size[1] - this.offsets[1] - this.options[\"left-offset\"] - this.shown_font_size;\r\n     }\r\n\r\n      let scale = d3\r\n          .scaleLinear()\r\n          .domain([0, domain_limit])\r\n          .range([0, range_limit]),\r\n         \r\n          scaleTickFormatter = d3.format(\".2f\");\r\n\r\n      this.draw_scale_bar = d3\r\n        .axisTop()\r\n        .scale(scale)\r\n        .tickFormat(function(d) {\r\n          if (d === 0) {\r\n            return \"\";\r\n          }\r\n          return scaleTickFormatter(d);\r\n        });\r\n\r\n      if (this.radial()) {\r\n        this.draw_scale_bar.tickValues([domain_limit]);\r\n      } else {\r\n        let round = function(x, n) {\r\n          return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\r\n        };\r\n\r\n        let my_ticks = scale.ticks();\r\n        my_ticks = my_ticks.length > 1 ? my_ticks[1] : my_ticks[0];\r\n\r\n        this.draw_scale_bar.ticks(\r\n          Math.min(\r\n            10,\r\n            round(\r\n              range_limit /\r\n                (this.shown_font_size *\r\n                  scaleTickFormatter(my_ticks).length *\r\n                  2),\r\n              0\r\n            )\r\n          )\r\n        );\r\n      }\r\n    } else {\r\n      this.draw_scale_bar = null;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Get or set spacing in the x-direction.\r\n   *\r\n   * @param {Number} attr (Optional), the new spacing value if setting.\r\n   * @param {Boolean} skip_render (Optional), whether or not a refresh should be performed.\r\n   * @returns The current ``spacing_x`` value if getting, or the current ``phylotree`` if setting.\r\n   */\r\n  spacing_x(attr, skip_render) {\r\n    if (!arguments.length) return this.fixed_width[0];\r\n\r\n    if (\r\n      this.fixed_width[0] != attr &&\r\n      attr >= this.options[\"minimum-per-node-spacing\"] &&\r\n      attr <= this.options[\"maximum-per-node-spacing\"]\r\n    ) {\r\n      this.fixed_width[0] = attr;\r\n      if (!skip_render) {\r\n        this.placenodes();\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Get or set spacing in the y-direction.\r\n   *\r\n   * @param {Number} attr (Optional), the new spacing value if setting.\r\n   * @param {Boolean} skip_render (Optional), whether or not a refresh should be performed.\r\n   * @returns The current ``spacing_y`` value if getting, or the current ``phylotree`` if setting.\r\n   */\r\n  spacing_y(attr, skip_render) {\r\n    if (!arguments.length) return this.fixed_width[1];\r\n\r\n    if (\r\n      this.fixed_width[1] != attr &&\r\n      attr >= this.options[\"minimum-per-level-spacing\"] &&\r\n      attr <= this.options[\"maximum-per-level-spacing\"]\r\n    ) {\r\n      this.fixed_width[1] = attr;\r\n      if (!skip_render) {\r\n        this.placenodes();\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  _label_width(_font_size) {\r\n    _font_size = _font_size || this.shown_font_size;\r\n    let width = 0;\r\n\r\n    this.phylotree.nodes\r\n      .descendants()\r\n      .filter(render_nodes.nodeVisible)\r\n      .forEach(node => {\r\n        let node_width = 12 + this._nodeLabel(node).length * _font_size * 0.8;\r\n\r\n        if (node.angle !== null) {\r\n          node_width *= Math.max(\r\n            Math.abs(Math.cos(node.angle)),\r\n            Math.abs(Math.sin(node.angle))\r\n          );\r\n        }\r\n        width = Math.max(node_width, width);\r\n      });\r\n\r\n    return width;\r\n  }\r\n\r\n  /**\r\n   * Get or set font size.\r\n   *\r\n   * @param {Function} attr Empty if getting, or new font size if setting.\r\n   * @returns The current ``font_size`` accessor if getting, or the current ``phylotree`` if setting.\r\n   */\r\n  font_size(attr) {\r\n    if (!arguments.length) return this.font_size;\r\n    this.font_size = attr === undefined ? 12 : attr;\r\n    return this;\r\n  }\r\n\r\n  scale_bar_font_size(attr) {\r\n    if (!arguments.length) return this.scale_bar_font_size;\r\n    this.scale_bar_font_size = attr === undefined ? 12 : attr;\r\n    return this;\r\n  }\r\n\r\n  node_circle_size(attr, attr2) {\r\n    if (!arguments.length) return this.options[\"node_circle_size\"];\r\n    this.options[\"node_circle_size\"] = constant(attr === undefined ? 3 : attr);\r\n    return this;\r\n  }\r\n\r\n  css(opt) {\r\n    if (arguments.length === 0) return this.css_classes;\r\n\r\n    if (arguments.length > 2) {\r\n      var arg = {};\r\n      arg[opt[0]] = opt[1];\r\n      return this.css(arg);\r\n    }\r\n\r\n    for (var key in css_classes) {\r\n      if (key in opt && opt[key] != css_classes[key]) {\r\n        css_classes[key] = opt[key];\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  transitions(arg) {\r\n    if (arg !== undefined) {\r\n      return arg;\r\n    }\r\n\r\n    if (this.options[\"transitions\"] !== null) {\r\n      return this.options[\"transitions\"];\r\n    }\r\n\r\n    return this.phylotree.nodes.descendants().length <= 300;\r\n  }\r\n\r\n  /**\r\n   * Get or set CSS classes.\r\n   *\r\n   * @param {Object} opt Keys are the CSS class to toggle and values are\r\n   * the parameters for that CSS class.\r\n   * @param {Boolean} run_update (optional) Whether or not the tree should update.\r\n   * @returns The current ``phylotree``.\r\n   */\r\n  css_classes(opt, run_update) {\r\n    if (!arguments.length) return this.css_classes;\r\n\r\n    let do_update = false;\r\n\r\n    for (var key in css_classes) {\r\n      if (key in opt && opt[key] != this.css_classes[key]) {\r\n        do_update = true;\r\n        this.css_classes[key] = opt[key];\r\n      }\r\n    }\r\n\r\n    if (run_update && do_update) {\r\n      this.layout();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Lay out the tree within the SVG.\r\n   *\r\n   * @param {Boolean} transitions Specify whether or not transitions should occur.\r\n   * @returns The current ``phylotree``.\r\n   */\r\n  layout(transitions) {\r\n    if (this.svg) {\r\n      this.svg.selectAll(\r\n        \".\" +\r\n          this.css_classes[\"tree-container\"] +\r\n          \",.\" +\r\n          this.css_classes[\"tree-scale-bar\"] +\r\n          \",.\" +\r\n          this.css_classes[\"tree-selection-brush\"]\r\n      );\r\n\r\n      //.remove();\r\n      this.d3PhylotreeTriggerLayout(this);\r\n      return this.update();\r\n    }\r\n\r\n    this.d3PhylotreeTriggerLayout(this);\r\n    return this;\r\n  }\r\n\r\n  handle_node_click(node, event) {\r\n    this.nodeDropdownMenu(node, this.container, this, this.options, event);\r\n  }\r\n\r\n  refresh() {\r\n    if (this.svg) {\r\n      // for re-entrancy\r\n      let enclosure = this.svg.selectAll(\r\n        \".\" + this.css_classes[\"tree-container\"]\r\n      );\r\n\r\n      let edges = enclosure\r\n        .selectAll(render_edges.edgeCssSelectors(this.css_classes))\r\n        .attr(\"class\", this.reclassEdge.bind(this));\r\n\r\n      if (this.edge_styler) {\r\n        edges.each(d => {\r\n          this.edge_styler(d3.select(this), d);\r\n        });\r\n      }\r\n\r\n      //let nodes = this.enclosure\r\n      //  .selectAll(inspector.nodeCssSelectors(this.css_classes))\r\n      //  .attr(\"class\", this.phylotree.reclassNode);\r\n\r\n      //if (this.node_styler) {\r\n      //  nodes.each(function(d) {\r\n      //    this.node_styler(d3.select(this), d);\r\n      //  });\r\n      //}\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  countHandler(attr) {\r\n    if (!arguments.length) return this.count_listener_handler;\r\n    this.count_listener_handler = attr;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Get or set node styler. If setting, pass a function of two arguments,\r\n   * ``element`` and ``data``. ``data`` exposes the underlying node so that\r\n   * its attributes can be referenced. These can be used to apply styles to\r\n   * ``element``, which will be a D3 selection corresponding to the SVG element\r\n   * that makes up the current node.\r\n   * ``transition`` is the third argument which indicates that there is an ongoing\r\n   * d3 transition in progress\r\n   *\r\n   * @param {Function} attr - Optional; if setting, the node styler function to be set.\r\n   * @returns The ``node_styler`` function if getting, or the current ``phylotree`` if setting.\r\n   */\r\n  style_nodes(attr) {\r\n    if (!arguments.length) return this.node_styler;\r\n    this.node_styler = attr;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Get or set edge styler. If setting, pass a function of two arguments,\r\n   * ``element`` and ``data``. ``data`` exposes the underlying edge so that\r\n   * its attributes can be referenced. These can be used to apply styles to\r\n   * ``element``, which will be a D3 selection corresponding to the SVG element\r\n   * that makes up the current edge.\r\n   *\r\n   * Note that, in accordance with the D3 hierarchy layout, edges will have\r\n   * a ``source`` and ``target`` field, corresponding to the nodes that make up\r\n   * up the associated branch.\r\n   *\r\n   * @param {Function} attr - Optional; if setting, the node styler function to be set.\r\n   * @returns The ``edge_styler`` function if getting, or the current ``phylotree`` if setting.\r\n   */\r\n  style_edges(attr) {\r\n    if (!arguments.length) return this.edge_styler;\r\n    this.edge_styler = attr.bind(this);\r\n    return this;\r\n  }\r\n\r\n  itemSelected(item, tag) {\r\n    return item[tag] || false;\r\n  }\r\n\r\n  show() {\r\n    return this.svg.node()\r\n  }\r\n\r\n}\r\n\r\n_.extend(TreeRender.prototype, clades);\r\n_.extend(TreeRender.prototype, render_nodes);\r\n_.extend(TreeRender.prototype, render_edges);\r\n_.extend(TreeRender.prototype, events);\r\n_.extend(TreeRender.prototype, menus);\r\n_.extend(TreeRender.prototype, opt);\r\n\r\nexport default TreeRender;\r\n","import * as d3 from \"d3\";\r\nimport * as _ from \"underscore\";\r\n\r\nimport { default as parser_registry } from \"./formats/registry\";\r\nimport { default as newickParser, getNewick } from \"./formats/newick\";\r\nimport { default as getTipLengths } from \"./export\";\r\nimport * as nexus from \"./formats/nexus\";\r\nimport { default as phyloxml_parser } from \"./formats/phyloxml\";\r\nimport { default as maxParsimony } from \"./max-parsimony\";\r\nimport { leftChildRightSibling, postOrder, preOrder, default as inOrder } from \"./traversal\";\r\n\r\nimport {\r\n  default as hasBranchLengths,\r\n  getBranchLengths,\r\n  defBranchLengthAccessor,\r\n  setBranchLength,\r\n  branchName,\r\n  normalize,\r\n  scale\r\n} from \"./branches\";\r\n\r\nimport * as node_operations from \"./nodes\";\r\nimport * as rooting from \"./rooting\";\r\nimport { default as TreeRender } from \"./render/draw\";\r\n\r\nfunction resortChildren(comparator, start_node, filter) {\r\n  // ascending\r\n  this.nodes\r\n    .sum(function(d) {\r\n      return d.value;\r\n    })\r\n    .sort(comparator);\r\n\r\n  // if a tree is rendered in the DOM\r\n  if (this.display) {\r\n    this.display.update_layout(this.nodes);\r\n    this.display.update();\r\n  }\r\n\r\n  return this;\r\n}\r\n\r\n/**\r\n * Return most recent common ancestor of a pair of nodes.\r\n * @returns An array of strings, comprising each tag that was read.\r\n */\r\nfunction mrca() {\r\n\r\n  var mrca_nodes, mrca;\r\n\r\n  if (arguments.length == 1) {\r\n    mrca_nodes = arguments[0];\r\n  } else {\r\n    mrca_nodes = Array.from(arguments);\r\n  }\r\n\r\n  mrca_nodes = mrca_nodes.map(function(mrca_node) {\r\n    return typeof mrca_node == \"string\" ? mrca_node : mrca_node.name;\r\n  });\r\n\r\n  this.traverse_and_compute(function(node) {\r\n    if (!node.children) {\r\n      node.mrca = _.intersection([node.name], mrca_nodes);\r\n    } else if (!node.parent) {\r\n      if (!mrca) {\r\n        mrca = node;\r\n      }\r\n    } else {\r\n      node.mrca = _.union(...node.descendants().map(child => child.mrca));\r\n      if (!mrca && node.mrca.length == mrca_nodes.length) {\r\n        mrca = node;\r\n      }\r\n    }\r\n  });\r\n\r\n  return mrca;\r\n\r\n}\r\n\r\n/**\r\n * An instance of a phylotree. Sets event listeners, parses tags, and creates links\r\n * that represent branches.\r\n *\r\n * @param {Object} nwk - A Newick string, PhyloXML string, or hierarchical JSON representation of a phylogenetic tree.\r\n * @param {Object} options\r\n * - boostrap_values\r\n * - type - format type\r\n * @returns {Phylotree} phylotree - itself, following the builder pattern.\r\n */\r\nlet Phylotree = class {\r\n\r\n  constructor(nwk, options = {}) {\r\n\r\n    this.newick_string = \"\";\r\n\r\n    this.nodes = [];\r\n    this.links = [];\r\n    this.parsed_tags = [];\r\n    this.partitions = [];\r\n    this.branch_length_accessor = defBranchLengthAccessor;\r\n    this.branch_length = defBranchLengthAccessor;\r\n    this.logger = options.logger || console;\r\n    this.selection_attribute_name = \"selected\";\r\n\r\n    // initialization\r\n    var type = options.type || undefined,\r\n      _node_data = [],\r\n      self = this;\r\n\r\n    // If the type is a string, check the parser_registry\r\n    if (_.isString(type)) {\r\n      if (type in parser_registry) {\r\n        _node_data = parser_registry[type](nwk, options);\r\n      } else {\r\n        // Hard failure\r\n        self.logger.error(\r\n          \"type \" +\r\n            type +\r\n            \" not in registry! Available types are \" +\r\n            _.keys(parser_registry)\r\n        );\r\n      }\r\n    } else if (_.isFunction(type)) {\r\n      // If the type is a function, try executing the function\r\n      try {\r\n        _node_data = type(nwk, options);\r\n      } catch (e) {\r\n        // Hard failure\r\n        self.logger.error(\"Could not parse custom format!\");\r\n      }\r\n    } else {\r\n      // this builds children and links;\r\n      if (nwk.name == \"root\") {\r\n        // already parsed by phylotree.js\r\n        _node_data = { json: nwk, error: null };\r\n      } else if (typeof nwk != \"string\") {\r\n        // old default\r\n        _node_data = nwk;\r\n      } else if (nwk.contentType == \"application/xml\") {\r\n        // xml\r\n        _node_data = phyloxml_parser(nwk);\r\n      } else {\r\n        // newick string\r\n        this.newick_string = nwk;\r\n        _node_data = newickParser(nwk, options);\r\n      }\r\n\r\n    }\r\n\r\n    if (!_node_data[\"json\"]) {\r\n\r\n      self.nodes = [];\r\n\r\n    } else {\r\n\r\n      self.nodes = d3.hierarchy(_node_data.json);\r\n\r\n      // Parse tags\r\n      let _parsed_tags = {};\r\n\r\n      self.nodes.each(node => {\r\n        if (node.data.annotation) {\r\n          _parsed_tags[node.data.annotation] = true;\r\n        }\r\n      });\r\n\r\n      self.parsed_tags = Object.keys(_parsed_tags);\r\n\r\n    }\r\n\r\n    self.links = self.nodes.links();\r\n\r\n    // If no branch lengths are supplied, set all to 1\r\n    if(!this.hasBranchLengths()) {\r\n      console.warn(\"Phylotree User Warning : NO BRANCH LENGTHS DETECTED, SETTING ALL LENGTHS TO 1\");\r\n      this.setBranchLength(x => 1)\r\n    }\r\n\r\n    return self;\r\n\r\n  }\r\n\r\n  /*\r\n    Export the nodes of the tree with all local keys to JSON\r\n    The return will be an array of nodes in the specified traversal_type\r\n    ('post-order' : default, 'pre-order', or 'in-order')\r\n    with parents and children referring to indices in that array\r\n\r\n  */\r\n  json(traversal_type) {\r\n\r\n    var index = 0;\r\n\r\n    this.traverse_and_compute(function(n) {\r\n      n.json_export_index = index++;\r\n    }, traversal_type);\r\n\r\n    var node_array = new Array(index);\r\n\r\n    index = 0;\r\n\r\n    this.traverse_and_compute(function(n) {\r\n      let node_copy = _.clone(n);\r\n      delete node_copy.json_export_index;\r\n\r\n      if (n.parent) {\r\n        node_copy.parent = n.parent.json_export_index;\r\n      }\r\n\r\n      if (n.children) {\r\n        node_copy.children = _.map(n.children, function(c) {\r\n          return c.json_export_index;\r\n        });\r\n      }\r\n      node_array[index++] = node_copy;\r\n    }, traversal_type);\r\n\r\n    this.traverse_and_compute(function(n) {\r\n      delete n.json_export_index;\r\n    }, traversal_type);\r\n\r\n    return JSON.stringify(node_array);\r\n  }\r\n\r\n  /*\r\n   * Traverse the tree in a prescribed order, and compute a value at each node.\r\n   *\r\n   * @param {Function} callback A function to be called on each node.\r\n   * @param {String} traversal_type Either ``\"pre-order\"`` or ``\"post-order\"`` or ``\"in-order\"``.\r\n   * @param {Node} root_node start traversal here, if provided, otherwise start at root\r\n   * @param {Function} backtrack ; if provided, then at each node n, backtrack (n) will be called,\r\n                                   and if it returns TRUE, traversal will NOT continue past into this\r\n                                   node and its children\r\n   */\r\n  traverse_and_compute(callback, traversal_type, root_node, backtrack) {\r\n    traversal_type = traversal_type || \"post-order\";\r\n\r\n    function post_order(node) {\r\n      if (_.isUndefined(node)) {\r\n        return;\r\n      }\r\n\r\n      postOrder(node, callback, backtrack);\r\n\r\n    }\r\n\r\n    function pre_order(node) {\r\n      preOrder(node, callback, backtrack);\r\n    }\r\n\r\n    function in_order(node) {\r\n      inOrder(node, callback, backtrack);\r\n    }\r\n\r\n    if (traversal_type == \"pre-order\") {\r\n      traversal_type = pre_order;\r\n    } else {\r\n      if (traversal_type == \"in-order\") {\r\n        traversal_type = in_order;\r\n      } else {\r\n        traversal_type = post_order;\r\n      }\r\n    }\r\n\r\n    traversal_type(root_node ? root_node : this.nodes);\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  get_parsed_tags() {\r\n    return this.parsed_tags;\r\n  }\r\n\r\n  update(json) {\r\n    // update with new hiearchy layout\r\n    this.nodes = json;\r\n  }\r\n\r\n  // Warning : Requires DOM!\r\n  render(options) {\r\n    this.display = new TreeRender(this, options);\r\n    return this.display;\r\n  }\r\n\r\n};\r\n\r\nPhylotree.prototype.isLeafNode = node_operations.isLeafNode;\r\nPhylotree.prototype.mrca = mrca;\r\nPhylotree.prototype.hasBranchLengths = hasBranchLengths;\r\nPhylotree.prototype.getBranchLengths = getBranchLengths;\r\nPhylotree.prototype.branchName = branchName;\r\nPhylotree.prototype.normalizeBranchLengths = normalize;\r\nPhylotree.prototype.scaleBranchLengths = scale;\r\nPhylotree.prototype.getNewick = getNewick;\r\nPhylotree.prototype.resortChildren = resortChildren;\r\nPhylotree.prototype.setBranchLength = setBranchLength;\r\nPhylotree.prototype.maxParsimony = maxParsimony;\r\n\r\nPhylotree.prototype.getTipLengths = getTipLengths;\r\nPhylotree.prototype.leftChildRightSibling = leftChildRightSibling;\r\n\r\n_.extend(Phylotree.prototype, node_operations);\r\n_.extend(Phylotree.prototype, rooting);\r\n_.extend(Phylotree.prototype, nexus);\r\n\r\nexport function itemTagged(item) {\r\n  return item.tag || false;\r\n}\r\n\r\nexport default Phylotree;\r\n","import * as _ from \"underscore\";\r\n\r\n/*\r\n *  given a tree, this function will compute quantities required to work with \r\n *  all v all pairwise distances (like in COT) \r\n *\r\n *  @param   tree the tree object\r\n *  @returns leaf count\r\n *\r\n */\r\nfunction computePairwiseDistances(tree) {\r\n  /*\r\n   *    traverse the tree and populate the following values in each node\r\n   *        \r\n   *        .cot_computed_length -> for each node (except the root), the current branch length \r\n   *                                (so as to not compute them each time via a callback) \r\n   *        .cot_leaf_index      -> post_order traversal order of a leaf (0 to number of leaves - 1)\r\n   *        \r\n   *        for each node\r\n   *        \r\n   *        .cot_path_to_leaves_below   \r\n   *                             -> a dictionary that maps a leaf index to the total path length from this node\r\n   *                                to each of the descendant leaves, EXCLUDING the length of this branch\r\n   *\r\n   *        .cot_path_to_leaves_above   \r\n   *                             -> a dictionary that maps a leaf index to the total path length from this node\r\n   *                                to each of the leaves outside the split defined by this node, EXCLUDING\r\n   *                                the length of this branch\r\n   */\r\n\r\n  var bl = tree.branch_length_accessor;\r\n\r\n  if (!bl) {\r\n    throw \"A non-null branch lengths accessor function is required for this operation\";\r\n  }\r\n\r\n  var leaf_count = 0;\r\n\r\n  tree.traverse_and_compute(function(n) {\r\n    n.cot_computed_length = bl(n);\r\n\r\n \r\n    if (n.parent && _.isUndefined(n.cot_computed_length)) {\r\n      throw \"Non-null branch lengths are required for this operation: missing branch length at node \" + n.data.name;\r\n    }\r\n\r\n    if (tree.isLeafNode(n)) {\r\n      n.cot_leaf_index = leaf_count++;\r\n      n.cot_path_to_leaves_below = {};\r\n      n.cot_path_to_leaves_below[n.cot_leaf_index] = 0;\r\n      n.cot_path_to_leaves_above = {};\r\n    } else {\r\n      n.cot_path_to_leaves_below = {};\r\n      n.cot_path_to_leaves_above = {};\r\n    }\r\n  });\r\n\r\n  // populate all cot_path_to_leaves_below\r\n  tree.traverse_and_compute(function(n) {\r\n    if (n.parent) {\r\n      _.each(n.cot_path_to_leaves_below, function(length_so_far, leaf_index) {\r\n        n.parent.cot_path_to_leaves_below[leaf_index] =\r\n          length_so_far + n.cot_computed_length;\r\n      });\r\n    }\r\n  });\r\n\r\n  // populate all cot_path_to_leaves_above; this is done via a 'pre-order' traversal\r\n  // handle root node first\r\n  var root_node = tree.getRootNode();\r\n\r\n  function CopyFromSiblings(a_node) {\r\n    for (var this_node = 0; this_node < a_node.children.length; this_node++) {\r\n      for (\r\n        var other_node = 0;\r\n        other_node < a_node.children.length;\r\n        other_node++\r\n      ) {\r\n        if (this_node != other_node) {\r\n          _.each(a_node.children[other_node].cot_path_to_leaves_below, function(\r\n            length,\r\n            index\r\n          ) {\r\n            if (a_node.children[this_node].cot_path_to_leaves_above) {\r\n              a_node.children[this_node].cot_path_to_leaves_above[index] =\r\n                length + a_node.children[other_node].cot_computed_length;\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  CopyFromSiblings(root_node);\r\n\r\n  // takes two passes\r\n\r\n  tree.traverse_and_compute(function(n) {\r\n    if (n.parent) {\r\n      // copy parent's 'above' nodes\r\n      _.each(n.parent.cot_path_to_leaves_above, function(\r\n        length_so_far,\r\n        leaf_index\r\n      ) {\r\n        n.cot_path_to_leaves_above[leaf_index] =\r\n          length_so_far + n.parent.cot_computed_length;\r\n      });\r\n\r\n      if (!tree.isLeafNode(n)) {\r\n        CopyFromSiblings(n);\r\n      }\r\n      // copy sibling's 'below' nodes\r\n    }\r\n  }, \"pre-order\");\r\n\r\n  return leaf_count;\r\n}\r\n\r\nexport default computePairwiseDistances;\r\n","import * as _ from \"underscore\";\r\n\r\n/*\r\n * The Sackin's index is computed as the sum of the number of ancestors for each\r\n * tips of the tree.\r\n *\r\n * The less balanced a tree is, the larger its Sackin's index.\r\n *\r\n */\r\n\r\nexport default function sackin(tree) {\r\n\r\n  // Get tips of tree\r\n  let tips = tree.getTips();\r\n\r\n  // Count number of ancestors to root for each tree\r\n  let depths = _.map(tips, d => { return d.depth });\r\n\r\n  return _.reduce(depths, function(memo, num){ return memo + num; }, 0);\r\n\r\n}\r\n","import * as _ from \"underscore\";\r\n\r\n/*\r\n *special case for L^2\r\n *\r\n *For a fixed branch B, we have one parameter : where to break the branch `t` in [0, T], \r\n *where T is the branch length\r\n *\r\n *D   = sum (a is a leaf above B) [d(B,a) + (T-t)] ^ 2 +\r\n *      sum (b is a leaf below B) [d(B,b) + t] ^ 2;\r\n *      \r\n *expanding, we have \r\n *\r\n *D   = sum (a is a leaf above B) [d^2 (B,a) + 2(T-t) d(B,a) + (T-t)^2]\r\n *      sum (b is a leaf below B) [d^2 (B,b) + 2(t) d(B,b) + t^2]\r\n *      \r\n *    = (sum distances above)^2 + sum (distances above)*2(T-t) + (T-t)^2 * # leaves_above\r\n *      (sum distances below)^2 + sum (distances below)*2*t    + t^2 * # leaves_below\r\n *\r\n *      \r\n *Taking a derivative with respect to t we have\r\n *\r\n *dD / dt = - 2 sum (a is a leaf above B) [d(B,a) + (T-t)]\r\n *          + 2 sum (b is a leaf below B) [d(B,b) + t]\r\n *          \r\n *\r\n *second derivative is positive the function is convex, so can set to the nearest boundary if solution is outside range\r\n *\r\n *setting dD / dt to zero, we have \r\n *\r\n *- sum (distances leaves above) - T * (#leaves above) + t * (#leaves above) + sum (distances leaves below) + t * (#leaves below) = 0\r\n *\r\n *t = [sum (distances leaves above) - sum (distances leaves below) + T * (#leaves above)] / (#leaves)\r\n */\r\n\r\nimport { default as pairwise_distances } from \"./pairwise-distances\";\r\n\r\nexport function centerOfTree(tree, power) {\r\n  power = power || 2;\r\n\r\n  var leaf_count = pairwise_distances(tree);\r\n\r\n  var current_min = Number.MAX_VALUE,\r\n    current_split = 0,\r\n    current_location = null;\r\n\r\n  if (power == 2) {\r\n    tree.traverse_and_compute(function(n) {\r\n      if (n.parent) {\r\n        // can't consider the root\r\n        var sum_below = 0,\r\n          sum_below_squared = 0,\r\n          sum_above = 0,\r\n          sum_above_squared = 0;\r\n\r\n        var count_below = 0;\r\n\r\n        _.each(n.cot_path_to_leaves_below, function(l) {\r\n          sum_below += l;\r\n          sum_below_squared += l * l;\r\n          count_below++;\r\n        });\r\n\r\n        _.each(n.cot_path_to_leaves_above, function(l) {\r\n          sum_above += l;\r\n          sum_above_squared += l * l;\r\n        });\r\n\r\n        var count_above = leaf_count - count_below;\r\n\r\n        var tt =\r\n          (sum_above - sum_below + n.cot_computed_length * count_above) /\r\n          leaf_count;\r\n        if (tt < 0) {\r\n          tt = 0;\r\n        } else if (tt > n.cot_computed_length) {\r\n          tt = n.cot_computed_length;\r\n        }\r\n\r\n        var score =\r\n          sum_above_squared +\r\n          sum_below_squared +\r\n          2 * (sum_above * (n.cot_computed_length - tt) + sum_below * tt) +\r\n          count_below * tt * tt +\r\n          (n.cot_computed_length - tt) *\r\n            (n.cot_computed_length - tt) *\r\n            count_above;\r\n\r\n        if (score < current_min) {\r\n          current_location = n;\r\n          current_split = tt / n.cot_computed_length; //n.cot_computed_length-tt;//1 - tt / n.cot_computed_length;\r\n          current_min = score;\r\n        }\r\n\r\n        delete n.cot_computed_length;\r\n        delete n.cot_path_to_leaves_below;\r\n        delete n.cot_path_to_leaves_above;\r\n        delete n.cot_leaf_index;\r\n      }\r\n    });\r\n  } else {\r\n    // in the general case try a simple grid optimization\r\n    tree.traverse_and_compute(function(n) {\r\n      if (n.parent) {\r\n        // can't consider the root\r\n\r\n        var optimization_step =\r\n            n.cot_computed_length > 0.0 ? n.cot_computed_length * 0.05 : 0.1,\r\n          current_t = 0;\r\n\r\n        while (current_t < n.cot_computed_length) {\r\n          var score = 0.0;\r\n\r\n          _.each(n.cot_path_to_leaves_below, function(l) {\r\n            score += Math.pow(l + current_t, power);\r\n          });\r\n\r\n          _.each(n.cot_path_to_leaves_above, function(l) {\r\n            score += Math.pow(l + (n.cot_computed_length - current_t), power);\r\n          });\r\n\r\n          if (score < current_min) {\r\n            current_location = n;\r\n            current_split = current_t / n.cot_computed_length; //n.cot_computed_length-tt;//1 - tt / n.cot_computed_length;\r\n            current_min = score;\r\n          }\r\n          current_t += optimization_step;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  return {\r\n    location: current_location,\r\n    breakpoint: current_split,\r\n    distance: current_min\r\n  };\r\n}\r\n","/**\r\n * Compute midpoint of a phylogenetic tree\r\n * \r\n * @param {Object} tree -- the phylotree.js tree object \r\n * @return {Object} the calculated midpoint to root on\r\n *  { location: root_node, breakpoint: 0 }\r\n *\r\n */\r\nexport function computeMidpoint(tree) {\r\n  if (!tree.hasBranchLengths()) {\r\n    throw \"Center of tree calculation cannot be performed on trees that do not have fully specified branch lengths\";\r\n  }\r\n\r\n  var bl = tree.branch_length;\r\n\r\n  tree.traverse_and_compute(function(node) {\r\n    if (node.parent) {\r\n      var my_longest_path_length = bl(node);\r\n      var my_longest_path_terminus;\r\n\r\n      if (tree.isLeafNode(node)) {\r\n        my_longest_path_terminus = node;\r\n        node.max_path = 0;\r\n        node.max_path_terminus = node;\r\n      } else {\r\n        my_longest_path_length += node.max_path;\r\n        my_longest_path_terminus = node.max_path_terminus;\r\n      }\r\n\r\n      if (\r\n        !node.parent.max_path ||\r\n        node.parent.max_path < my_longest_path_length\r\n      ) {\r\n        node.parent.max_path = my_longest_path_length;\r\n        node.parent.max_path_terminus = my_longest_path_terminus;\r\n      }\r\n    }\r\n  });\r\n\r\n  var root_node = tree.getRootNode();\r\n  var longest_path_length = 0;\r\n\r\n  root_node.children.forEach(function(root_child) {\r\n    if (root_child.max_path_terminus !== root_node.max_path_terminus) {\r\n      var pl = root_child.max_path + bl(root_child);\r\n      if (pl >= longest_path_length) {\r\n        longest_path_length = pl;\r\n      }\r\n    }\r\n  });\r\n\r\n  if (root_node.max_path > longest_path_length) {\r\n    // not already midpoint rooted\r\n    longest_path_length = (longest_path_length + root_node.max_path) * 0.5;\r\n\r\n    // start traversing up from the deepest leaf to the root, until we find the\r\n    // half-way point\r\n\r\n    var root_on = root_node.max_path_terminus;\r\n\r\n    while (true) {\r\n      var current_bl = bl(root_on);\r\n      //console.log (current_bl, longest_path_length);\r\n      if (current_bl <= longest_path_length) {\r\n        longest_path_length -= current_bl;\r\n        root_on = root_on.parent;\r\n      } else {\r\n        //console.log (\"Rooting on \", root_on, longest_path_length[0], current_bl);\r\n\r\n        return {\r\n          location: root_on,\r\n          breakpoint: longest_path_length / current_bl\r\n        };\r\n\r\n        //console.log (\"Longest \" + root_path (tree.getNodeByName(root_node.max_path_terminus.name)));\r\n        //console.log (\"Second longest \" + root_path (tree.getNodeByName(longest_path_length[1].name)));\r\n      }\r\n    }\r\n  }\r\n  return { location: root_node, breakpoint: 0 };\r\n}\r\n","import * as _ from \"underscore\";\r\n\r\nfunction annotateCopyNumber(tree) {\r\n  tree.traverse_and_compute(function(node) {\r\n    if (tree.isLeafNode(node)) {\r\n      node.data.copy_number = 1;\r\n    }\r\n  });\r\n}\r\n\r\n// internal function used by best root fitting\r\nfunction computeRootToTipOtherRoot(\r\n  tree,\r\n  node,\r\n  coming_from,\r\n  shared_distance,\r\n  distance_to_new_root\r\n) {\r\n\r\n  var my_bl = tree.branch_length(node);\r\n\r\n  var go_up = false;\r\n\r\n  if (!coming_from) {\r\n    shared_distance = node.data.rootToTip;\r\n    distance_to_new_root = 0;\r\n    go_up = true;\r\n  }\r\n\r\n  if (node.children) {\r\n    for (var c = 0; c < node.children.length; c++) {\r\n      if (node.children[c] != coming_from) {\r\n        computeRootToTipOtherRoot(\r\n          tree,\r\n          node.children[c],\r\n          node,\r\n          shared_distance,\r\n          distance_to_new_root\r\n        );\r\n      } else {\r\n        go_up = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  node.data.rtta = node.data.rootToTip - shared_distance + distance_to_new_root;\r\n\r\n  if (go_up) {\r\n    shared_distance -= my_bl;\r\n    distance_to_new_root += my_bl;\r\n  }\r\n\r\n  if (node.parent && go_up) {\r\n    computeRootToTipOtherRoot(\r\n      tree,\r\n      node.parent,\r\n      node,\r\n      shared_distance,\r\n      distance_to_new_root\r\n    );\r\n  }\r\n}\r\n\r\nexport function fitRootToTip(tree) {\r\n\r\n  var linear_data = [],\r\n    max_r2 = 0,\r\n    best_node = 0;\r\n\r\n  annotateCopyNumber(tree);\r\n  rootToTip(tree);\r\n\r\n  // To return if best node is the root already\r\n  tree.traverse_and_compute(function(node) {\r\n    if (tree.isLeafNode(node) && !_.isNull(node.data.decimal_date_value)) {\r\n      linear_data.push([node.data.decimal_date_value, node.data.rtta, node.data.copy_number]);\r\n    }\r\n  });\r\n\r\n  let best_fit = linearFit(linear_data);\r\n\r\n  tree.traverse_and_compute(function(node) {\r\n\r\n    if (tree.isLeafNode(node) && !_.isNull(node.data.decimal_date_value)) {\r\n\r\n      computeRootToTipOtherRoot(tree, node, null, 0, 0);\r\n\r\n      linear_data = [];\r\n\r\n      tree.traverse_and_compute(function(node) {\r\n        if (tree.isLeafNode(node) && !_.isNull(node.data.decimal_date_value)) {\r\n          linear_data.push([\r\n            node.data.decimal_date_value,\r\n            node.data.rtta,\r\n            node.data.copy_number\r\n          ]);\r\n        }\r\n      });\r\n\r\n      var fit = linearFit(linear_data),\r\n        r2 = fit[\"r2\"];\r\n\r\n      if (r2 > max_r2) {\r\n        max_r2 = r2;\r\n        best_node = node;\r\n        best_fit = fit;\r\n      }\r\n\r\n    }\r\n  });\r\n\r\n  return { root: best_node, fit: best_fit };\r\n\r\n}\r\n\r\n// linear fit of root to tip distances\r\nfunction linearFit(data) {\r\n\r\n  var ss = data.reduce(function(p, c) {\r\n      return c[2] + p;\r\n    }, 0), // sample count\r\n    sx = data.reduce(function(p, c) {\r\n      return c[2] * c[0] + p;\r\n    }, 0), // sum X\r\n    sy = data.reduce(function(p, c) {\r\n      return c[2] * c[1] + p;\r\n    }, 0), // sum Y\r\n    sxoss = sx / ss,\r\n    syoss = sy / ss;\r\n\r\n  var fitB = 0,\r\n    st2 = 0,\r\n    vary = 0;\r\n\r\n  data.forEach(function(point) {\r\n    var t = point[0] - sxoss;\r\n    st2 += point[2] * t * t;\r\n    fitB += point[2] * t * point[1];\r\n    vary += point[2] * (point[1] - syoss) * (point[1] - syoss);\r\n  });\r\n\r\n  fitB /= st2;\r\n\r\n  var a = (sy - sx * fitB) / ss;\r\n\r\n  var varres = 0;\r\n\r\n  data.forEach(function(point) {\r\n    var t = point[1] - a - fitB * point[0];\r\n    varres += point[2] * t * t;\r\n  });\r\n\r\n  return {\r\n    intercept: a,\r\n    slope: fitB,\r\n    r2: 1 - varres / vary,\r\n    \"var (intercept)\": Math.sqrt((1 + sx * sx / (ss * st2)) / ss),\r\n    \"var (slope)\": Math.sqrt(1 / st2)\r\n  };\r\n}\r\n\r\n/**\r\n *   fast and memory efficient root to tip distance calculator\r\n *   for each leaf node stores the current root to tip distance in \r\n *   the node.rootToTip field\r\n *   \r\n *   @param tree\r\n *   @return tree with rootToTip computed\r\n *\r\n */\r\nexport default function rootToTip(tree) {\r\n\r\n  var bl = tree.branch_length_accessor,\r\n    index = 0;\r\n\r\n  tree.traverse_and_compute(n => {\r\n    if (n.parent) {\r\n      n.data._computed_length = bl(n);\r\n      if (!_.isNumber(n.data._computed_length)) {\r\n        throw \"rootToTip cannot be run on trees with missing branch lengths\";\r\n      }\r\n    }\r\n    if (tree.isLeafNode(n)) {\r\n      n.data.leaf_index = index++;\r\n    }\r\n    if (\"r2t\" in n.data) {\r\n      delete n.data.r2t;\r\n    }\r\n  });\r\n\r\n  tree.traverse_and_compute(n => {\r\n    if (n.parent) {\r\n      if (!(\"r2t\" in n.parent.data)) {\r\n        n.parent.data.r2t = {};\r\n      }\r\n      if (tree.isLeafNode(n)) {\r\n        n.parent.data.r2t[n.data.leaf_index] = n.data._computed_length;\r\n      } else {\r\n        _.each(n.data.r2t, function(v, idx) {\r\n          n.parent.data.r2t[idx] = v + n.data._computed_length;\r\n        });\r\n        delete n.data.r2t;\r\n      }\r\n      delete n.data._computed_length;\r\n    }\r\n  });\r\n\r\n  var r2t = tree.getRootNode().data.r2t;\r\n\r\n  tree.traverse_and_compute(n => {\r\n    if (tree.isLeafNode(n)) {\r\n      n.data.rootToTip = r2t[n.data.leaf_index] || 0;\r\n      delete n.data.leaf_index;\r\n    }\r\n  });\r\n\r\n  delete tree.getRootNode().data.r2t;\r\n\r\n  return tree;\r\n}\r\n","import * as d3 from \"d3\";\r\nimport { isLeafNode } from \"./nodes\";\r\n\r\nconst default_date_converter = d3.timeParse(\"%Y%m%d\");\r\n\r\nconst default_regexp = /([0-9]{4}).?([0-9]{2}).?([0-9]{2})$/g;\r\n\r\nconst default_date_getter = function(node) {\r\n  if (isLeafNode(node)) {\r\n    if (\"name\" in node) {\r\n      let location = default_regexp.exec(node.name);\r\n      if (location) {\r\n        return location[1] + location[2] + location[3];\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\n/*\r\n *  Extracts dates from nodes using a provided callback (defaults supplied),\r\n *  and also converts them to decimal dates; missing dates are allowed; if desired, missing dates \r\n *  can throw exceptions \r\n *  \r\n *  @param tree             : the tree object \r\n *\r\n *  @param date_getter      : a function that extracts date strings from nodes (e.g. by parsing the name),\r\n *                            default is to extract from the end of the node name, using [YYYY] optional sep [MM] optional sep [DD] format;\r\n *                            default is implemented in phylotree_extensions.extract_dates.date_getter ()\r\n *                            \r\n *  @param date_converter   : if provided, will be used to parse the date string; default is %Y%m%d implemented in \r\n *                            phylotree_extensions.extract_dates.date_converter\r\n *  \r\n *  \r\n *  @return tree with date-annotated nodes, i.e. each node will have\r\n *  \r\n *      n.date_value (date object, e.g. 2018-08-17); null for missing\r\n *      n.decimal_date_value (decimal object, e.g. 2018.72)\r\n *  \r\n */\r\nconst extract_dates = function(tree, date_getter, date_converter=default_date_converter) {\r\n\r\n  date_getter = date_getter || default_date_getter;\r\n  \r\n  tree.traverse_and_compute(function(n) {\r\n    var d_string = date_getter(n);\r\n    if (d_string) {\r\n      try {\r\n        n.data.date_value = date_converter(d_string);\r\n        var full_year = n.data.date_value.getFullYear();\r\n        var year_start = new Date(full_year, 0, 1),\r\n          year_start_p1 = new Date(full_year + 1, 0, 1);\r\n\r\n        n.data.decimal_date_value =\r\n          full_year +\r\n          (n.data.date_value - year_start) / (year_start_p1 - year_start);\r\n        return;\r\n      } catch (e) {\r\n        // for conversion failures\r\n      }\r\n    }\r\n    n.data.date_value = null;\r\n    n.data.decimal_date_value = null;\r\n  });\r\n\r\n  return tree;\r\n};\r\n\r\nexport default extract_dates;\r\n","import * as _ from \"underscore\";\r\n\r\n/**\r\n * Implements a linear time / space version of the Cluster picker algorithm\r\n * \r\n * @param tree -- the tree object \r\n * @param bootstrap_thresold -- value in [0,1] that sets the stringency of bootstrap support\r\n * @param diameter_threshold -- value >=0 that defines the maximum allowable pairwise distance in a cluster\r\n * @param root_node -- if specified, traverse the tree starting here (useful for only looking at parts of the tree),\r\n * tree root by default\r\n * @param missing_bootstrap_value -- if a branch is missing bootstrap support value, use this value instead\r\n *                   (1.0 by default)\r\n *                                 \r\n * @return an array of clusters, where cluster = \r\n * \\{\r\n *    'root'   : [root node of cluster],\r\n *    'members' : [list of leaf. nodes],\r\n *    'diameter' : max distance in the cluster,\r\n *    'bootstrap' : bootstrap support at the root node\r\n * \\}                        \r\n */\r\nfunction clusterPicker(\r\n  tree,\r\n  bootstrap_threshold,\r\n  diameter_threshold,\r\n  root_node,\r\n  missing_bootstrap_value\r\n) {\r\n  root_node = root_node || tree.getRootNode();\r\n  missing_bootstrap_value = _.isNumber(missing_bootstrap_value)\r\n    ? missing_bootstrap_value\r\n    : 1;\r\n\r\n  // perform a bottom-up pass of the tree\r\n  // where each internal node will receive a floating point value\r\n  // that stores the longest path from the internal node to any of its descendants,\r\n  // the diameter of the cluster,  is then the sum of longest paths of all of its children\r\n  let bl = tree.branch_length;\r\n\r\n  // initialize member variables\r\n  tree.traverse_and_compute(function(n) {\r\n    if (n.parent) {\r\n      n._computed_length = bl(n);\r\n      if (!_.isNumber(n._computed_length)) {\r\n        throw \"clusterPicker cannot be run on trees with missing branch lengths\";\r\n      }\r\n      n.max_path_length = 0;\r\n    }\r\n  });\r\n\r\n  tree.traverse_and_compute(function(n) {\r\n    if (n.parent) {\r\n      n.parent.max_path_length = Math.max(\r\n        n.parent.max_path_length,\r\n        n.max_path_length + n._computed_length\r\n      );\r\n    }\r\n  });\r\n\r\n  var clusters = [];\r\n\r\n  tree.traverse_and_compute(_.noop, \"pre-order\", root_node, function(n) {\r\n    if (!tree.isLeafNode(n)) {\r\n      var bs = _.isString(n.data.bootstrap_values)\r\n        ? +n.data.bootstrap_values\r\n        : missing_bootstrap_value;\r\n\r\n      if (bs >= bootstrap_threshold) {\r\n        var my_diameter = _.reduce(\r\n          n.children,\r\n          function(c, n) {\r\n            return n.max_path_length + n._computed_length + c;\r\n          },\r\n          0\r\n        );\r\n\r\n        if (my_diameter <= diameter_threshold) {\r\n          clusters.push({ root: n, diameter: my_diameter, bootstrap: bs });\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  // clean up member variables\r\n  tree.traverse_and_compute(\r\n    function(n) {\r\n      if (n.parent) {\r\n        delete n._computed_length;\r\n        delete n.max_path_length;\r\n      }\r\n    },\r\n    \"post-order\",\r\n    root_node\r\n  );\r\n\r\n  _.each(clusters, function(cluster) {\r\n    cluster[\"members\"] = [];\r\n    tree.traverse_and_compute(\r\n      function(n) {\r\n        if (tree.isLeafNode(n)) {\r\n          cluster[\"members\"].push(n);\r\n        }\r\n      },\r\n      \"post-order\",\r\n      cluster[\"root\"]\r\n    );\r\n  });\r\n\r\n  return clusters;\r\n}\r\n\r\nexport default clusterPicker;\r\n","import * as _ from \"underscore\";\r\n\r\n/*\r\n *Implements a linear time / space version of the Phylopart algorithm\r\n *Nature Communications volume 2, Article number: 321 (2011)\r\n *\r\n *@param tree                 -- the tree object \r\n *\r\n *@param bootstrap_thresold -- value in [0,1] that sets the stringency of bootstrap support\r\n *\r\n *@param percentile threshold -- a value in 0-1, which is used to delineate how clusters\r\n *                               are defined; the actual criterion used is \r\n *        [approximate] median pairwise distance in a cluster <= %-le of tree-wide distribution \r\n *                               \r\n *@param missing_bootstrap_value -- if a branch is missing bootstrap support value, use this value instead\r\n *                    (1.0 by default)\r\n *                    \r\n *@param resolution -- the width of the bin for the histogram; by default is set to be the   \r\n *                     minimum of 0.001, branch length range / 100,\r\n *                     however, the maximum number of histogram bins is capped at 500 for \r\n *                     performance reasons\r\n *                                 \r\n *@return an array of clusters, where cluster = \r\n *{\r\n *    'root'              : [root node of cluster]\r\n *    'members'           : [list of leaf. nodes]\r\n *    'median'            : approximate median cluster distance,\r\n *    'bootstrap'         : bootstrap support at the root node\r\n *}                        \r\n */\r\n\r\nimport { default as pairwise_distances } from \"../metrics/pairwise-distances\";\r\n\r\nfunction phylopart(\r\n  tree,\r\n  bootstrap_threshold,\r\n  percentile_threshold,\r\n  missing_bootstrap_value,\r\n  resolution\r\n) {\r\n  /** TODO SLKP 20180817 : this implementation does not compute pairwise distances correctly at the moment;\r\n   instead it computes root-to-tip distances */\r\n  missing_bootstrap_value = _.isNumber(missing_bootstrap_value)\r\n    ? missing_bootstrap_value\r\n    : 1;\r\n\r\n  var leaf_count = pairwise_distances(tree);\r\n\r\n  /** first, decide on the domain of branch lengths **/\r\n\r\n  var core_node = tree.getRootNode().children[0];\r\n\r\n  var min_bl = Number.MAX_VALUE,\r\n    min_bl2 = Number.MAX_VALUE;\r\n\r\n  if (!(percentile_threshold > 0 && percentile_threshold < 1)) {\r\n    throw \"Invalid percentile threshold in perform_phylopart\";\r\n  }\r\n\r\n  tree.traverse_and_compute(function(n) {\r\n    if (tree.isLeafNode(n)) {\r\n      if (n.cot_computed_length < min_bl) {\r\n        if (min_bl < min_bl2) {\r\n          min_bl2 = min_bl;\r\n        }\r\n        min_bl = n.cot_computed_length;\r\n      } else {\r\n        if (n.cot_computed_length < min_bl2) {\r\n          min_bl2 = n.cot_computed_length;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  min_bl += min_bl2;\r\n\r\n  // pairwise distances are bounded below by the sum of two shortest terminal branches\r\n\r\n  // compute the upper bound\r\n  var max_path_length =\r\n    _.reduce(\r\n      core_node.cot_path_to_leaves_below,\r\n      function(c, n) {\r\n        return n > c ? n : c;\r\n      },\r\n      0\r\n    ) +\r\n    _.reduce(\r\n      core_node.cot_path_to_leaves_above,\r\n      function(c, n) {\r\n        return n > c ? n : c;\r\n      },\r\n      0\r\n    ) +\r\n    core_node.cot_computed_length;\r\n\r\n  var domain = max_path_length - min_bl;\r\n\r\n  if (_.isUndefined(resolution)) {\r\n    resolution = Math.min(1e-3, domain / 100);\r\n  }\r\n\r\n  var number_of_bins = ((domain / resolution) >> 0) + 1;\r\n  if (number_of_bins > 500) {\r\n    number_of_bins = 500;\r\n    resolution = domain / number_of_bins;\r\n  }\r\n\r\n  var root_node = tree.getRootNode();\r\n\r\n  root_node.paths_to_leaves = new Array(leaf_count);\r\n\r\n  _.each(root_node.children, function(cn) {\r\n    _.each(root_node.cot_path_to_leaves_below, function(v, i) {\r\n      root_node.paths_to_leaves[i] = v + cn.cot_computed_length;\r\n    });\r\n  });\r\n\r\n  tree.traverse_and_compute(function(n) {\r\n    if (!tree.isLeafNode(n)) {\r\n      n.histogram = new Array(number_of_bins);\r\n      for (var i = 0; i < number_of_bins; i++) {\r\n        n.histogram[i] = 0;\r\n      }\r\n      if (n.parent) {\r\n        var index = 0;\r\n        n.paths_to_leaves = [];\r\n        _.each(n.cot_path_to_leaves_below, function(v, i) {\r\n          n.paths_to_leaves[index++] = v;\r\n        });\r\n      }\r\n    }\r\n    delete n.cot_path_to_leaves_above;\r\n    delete n.cot_path_to_leaves_below;\r\n  });\r\n\r\n  /**\r\n        for each internal node, produce a histogram of pairwise distances on sequences that are defined \r\n        by the subtree at that node\r\n        \r\n        this could be approximated (I think), by merging histograms of children\r\n    */\r\n\r\n  tree.traverse_and_compute(function(n) {\r\n    if (!tree.isLeafNode(n)) {\r\n      for (var n1 = 0; n1 < n.paths_to_leaves.length; n1++) {\r\n        for (var n2 = n1 + 1; n2 < n.paths_to_leaves.length; n2++) {\r\n          var sum = n.paths_to_leaves[n1] + n.paths_to_leaves[n2];\r\n          n.histogram[((sum - min_bl) / resolution) >> 0]++;\r\n        }\r\n      }\r\n      n.leaf_count = n.paths_to_leaves.length;\r\n\r\n      delete n.paths_to_leaves;\r\n    }\r\n  });\r\n\r\n  // compute the percentile distance cutoff\r\n\r\n  var total_comparisons =\r\n    (leaf_count - 1) * leaf_count / 2 * percentile_threshold;\r\n  var bin_i = 0;\r\n  for (\r\n    ;\r\n    bin_i < number_of_bins - 1 &&\r\n    total_comparisons > root_node.histogram[bin_i];\r\n    bin_i++\r\n  ) {\r\n    total_comparisons -= root_node.histogram[bin_i];\r\n  }\r\n\r\n  var median_threshold =\r\n    min_bl +\r\n    (bin_i +\r\n      (root_node.histogram[bin_i] - total_comparisons) /\r\n        root_node.histogram[bin_i]) *\r\n      resolution;\r\n\r\n  var clusters = [];\r\n\r\n  tree.traverse_and_compute(_.noop, \"pre-order\", null, function(n) {\r\n    if (!tree.isLeafNode(n)) {\r\n      var bs = _.isString(n.data.bootstrap_values)\r\n        ? +n.data.bootstrap_values\r\n        : missing_bootstrap_value;\r\n      if (bs >= bootstrap_threshold) {\r\n        var total_comparisons = n.leaf_count * (n.leaf_count - 1) * 0.25;\r\n\r\n        var bin_i = 0;\r\n        for (\r\n          ;\r\n          bin_i < number_of_bins - 1 && total_comparisons > n.histogram[bin_i];\r\n          bin_i++\r\n        ) {\r\n          total_comparisons -= n.histogram[bin_i];\r\n        }\r\n\r\n        var my_median =\r\n          min_bl +\r\n          (bin_i +\r\n            (n.histogram[bin_i] - total_comparisons) / n.histogram[bin_i]) *\r\n            resolution;\r\n\r\n        if (my_median <= median_threshold) {\r\n          clusters.push({ root: n, median: my_median, bootstrap: bs });\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  tree.traverse_and_compute(function(n) {\r\n    if (!tree.isLeafNode(n)) {\r\n      if (\"histogram\" in n) {\r\n        delete n.histogram;\r\n        delete n.leaf_count;\r\n      }\r\n    }\r\n  });\r\n\r\n  _.each(clusters, function(cluster) {\r\n    cluster[\"members\"] = [];\r\n    tree.traverse_and_compute(\r\n      function(n) {\r\n        if (tree.isLeafNode(n)) {\r\n          cluster[\"members\"].push(n);\r\n        }\r\n      },\r\n      \"post-order\",\r\n      cluster[\"root\"]\r\n    );\r\n  });\r\n\r\n  return clusters;\r\n}\r\n\r\nexport default phylopart;\r\n","import * as _ from \"lodash\";\r\n\r\nexport default function parseFasta(fastaData) {\r\n\r\n\r\n  let sfasta = _.split(fastaData, \"\\n\");\r\n\r\n  let seqs = _.chain(sfasta)\r\n    .map((d, i) => (d.startsWith(\">\") ? i : -1))\r\n    .filter((d) => d != -1)\r\n    .map((d, i, c) => _.slice(sfasta, c[i], c[i + 1]))\r\n    .keyBy((d) => _.trim(d[0], \">\"))\r\n    .mapValues((d) => _.tail(d).join(\"\"))\r\n    .value();\r\n\r\n  return seqs;\r\n\r\n}\r\n","import * as _ from \"lodash\";\r\nimport { default as phylotree } from \"./main\";\r\n\r\nfunction remove(i, D) {\r\n  let dNew = [];\r\n\r\n  for (let j of _.range(D.length)) {\r\n    if (j != i) {\r\n      let dNewRow = [];\r\n      for (let k of _.range(D[j].length)) {\r\n        if (k != i) {\r\n          dNewRow.push(D[j][k]);\r\n        }\r\n      }\r\n      dNew.push(dNewRow);\r\n    }\r\n  }\r\n\r\n  return dNew;\r\n}\r\n\r\nfunction getDPrime(distanceMatrix, totalDistances, N) {\r\n  let DPrime = _.chunk(_.fill(Array(N * N), 0), N);\r\n  for (let i of _.range(N)) {\r\n    for (let j of _.range(_.parseInt(i) + 1, N)) {\r\n      DPrime[i][j] =\r\n        (N - 2) * distanceMatrix[i][j] - totalDistances[i] - totalDistances[j];\r\n      DPrime[j][i] = DPrime[i][j];\r\n    }\r\n  }\r\n  return DPrime;\r\n}\r\n\r\nfunction ijMinDPrime(dPrime, N) {\r\n  let i = -1;\r\n  let j = -1;\r\n  let minD = Infinity;\r\n  for (let ii of _.range(N)) {\r\n    for (let jj of _.range(i, N)) {\r\n      if (dPrime[ii][jj] < minD) {\r\n        i = ii;\r\n        j = jj;\r\n        minD = dPrime[i][j];\r\n      }\r\n    }\r\n  }\r\n  return [i, j, minD];\r\n}\r\n\r\nfunction createDelta(totalDistances, N) {\r\n  let deltaMatrix = _.chunk(Array(N * N), N);\r\n\r\n  for (let i of _.range(N)) {\r\n    for (let j of _.range(parseInt(i) + 1, N)) {\r\n      deltaMatrix[i][j] = (totalDistances[i] - totalDistances[j]) / (N - 2);\r\n      deltaMatrix[j][i] = deltaMatrix[i][j];\r\n    }\r\n  }\r\n\r\n  return deltaMatrix;\r\n}\r\n\r\nexport function getDistanceMatrix(seqs) {\r\n  // Gaps are masked\r\n\r\n  let initKey = _.keys(seqs)[0];\r\n  let seqLength = seqs[initKey].length;\r\n\r\n  return _.mapValues(seqs, (seq) =>\r\n    _.map(seqs, (seq2) =>\r\n      _.sum(\r\n        _.map(\r\n          _.range(seqLength),\r\n          (i) => seq[i] != seq2[i] && seq[i] != \"-\" && seq2[i] != \"-\"\r\n        )\r\n      )\r\n    )\r\n  );\r\n}\r\n\r\nfunction getTotalDistances(distanceMatrix) {\r\n  return _.map(distanceMatrix, _.sum);\r\n}\r\n\r\n/**\r\n * Create a neighbor joining tree from a distance matrix\r\n * See test/neighbor-join-test.js for a working example\r\n *\r\n * @param {Array} distanceMatrixArr The NxN distance matrix.\r\n *\tconst D = [\r\n *\t\t\t[0,  5,  9,  9, 8],\r\n *\t\t\t[5,  0, 10, 10, 9],\r\n *\t\t\t[9, 10,  0,  8, 7],\r\n *\t\t\t[9, 10,  8,  0, 3],\r\n *\t\t\t[8,  9,  7,  3, 0]\r\n * \t];\r\n * \r\n * @param {Number} n The dimension of the distanceMatrixArr.\r\n * @param {Array} nodeList The names of each row in the distanceMatrix\r\n * @returns The neighbor joining new tree.\r\n */\r\nexport default function neighborJoining(distanceMatrixArr, n, nodeList) {\r\n  if (n <= 2) {\r\n    let tree = new phylotree(\"\");\r\n\r\n    //T.link(nodeList[0],nodeList[1],D[0][1])\r\n\r\n    let newNode = tree.getNodes();\r\n    // Get root\r\n    let distance = distanceMatrixArr[0][1] / 2;\r\n\r\n    let nodeA = tree.createNode(nodeList[0], [null, [distance]]);\r\n    let nodeB = tree.createNode(nodeList[1], [null, [distance]]);\r\n\r\n    //// Add the children to the newly created node\r\n    tree.addChild(newNode, nodeA);\r\n    tree.addChild(newNode, nodeB);\r\n\r\n    return tree;\r\n  } else {\r\n    let N = n;\r\n    let totalDistances = getTotalDistances(distanceMatrixArr);\r\n    let dPrime = getDPrime(distanceMatrixArr, totalDistances, N);\r\n    let [i, j, minD] = ijMinDPrime(dPrime, N);\r\n    let deltaMatrix = createDelta(totalDistances, N);\r\n    let limbLengthI = (distanceMatrixArr[i][j] + deltaMatrix[i][j]) / 2;\r\n    let limbLengthJ = (distanceMatrixArr[i][j] - deltaMatrix[i][j]) / 2;\r\n    let newRow = _.concat(\r\n      0,\r\n      _.filter(\r\n        _.map(_.range(n), (k) => {\r\n          if (k != i && k != j) {\r\n            return (\r\n              0.5 *\r\n              (distanceMatrixArr[k][i] +\r\n                distanceMatrixArr[k][j] -\r\n                distanceMatrixArr[i][j])\r\n            );\r\n          }\r\n        }),\r\n        _.isNumber\r\n      )\r\n    );\r\n\r\n    let nodeI = nodeList[i];\r\n    let nodeJ = nodeList[j];\r\n\r\n    // Get all nodes of type InternalNode{x} and increment number.\r\n    // If there are none, start with InternalNode0\r\n    let m = \"InternalNode0\";\r\n    let internalNodes = _.filter(nodeList, (x) =>\r\n      _.includes(x, \"InternalNode\")\r\n    );\r\n\r\n    if (internalNodes.length) {\r\n      let highestNum = _.max(\r\n        _.map(internalNodes, (label) => _.split(label, \"InternalNode\")[1])\r\n      );\r\n      m = \"InternalNode\" + ++highestNum;\r\n    }\r\n\r\n    nodeList.unshift(m);\r\n\r\n    distanceMatrixArr = remove(_.max([i, j]), distanceMatrixArr);\r\n    distanceMatrixArr = remove(_.min([i, j]), distanceMatrixArr);\r\n\r\n    distanceMatrixArr.unshift(newRow);\r\n\r\n    _.each(_.range(1, n - 1), (l) => distanceMatrixArr[l].unshift(newRow[l]));\r\n\r\n    // Remove from nodeList\r\n    _.remove(nodeList, (n) => n == nodeI || n == nodeJ);\r\n    let tree = neighborJoining(distanceMatrixArr, N - 1, nodeList);\r\n\r\n    let treeNodeI = tree.createNode(nodeI, [null, [limbLengthI]]);\r\n    let treeNodeJ = tree.createNode(nodeJ, [null, [limbLengthJ]]);\r\n\r\n    // If the node doesn't exist, create. Otherwise, reassign the length\r\n    if (tree.getNodeByName(m)) {\r\n      let internalNode = tree.getNodeByName(m);\r\n      tree.addChild(internalNode, treeNodeI);\r\n      tree.addChild(internalNode, treeNodeJ);\r\n    } else {\r\n      let newNode = tree.createNode(m, [null, [0]]);\r\n      tree.addChild(tree.getNodes(), newNode);\r\n      // Add the children to the newly created node\r\n      tree.addChild(newNode, treeNodeI);\r\n      tree.addChild(newNode, treeNodeJ);\r\n    }\r\n\r\n    // Set negative to 0 and add distance to other limblength\r\n    return tree;\r\n  }\r\n\r\n  return null;\r\n}\r\n"],"names":["_","nexus_parser","d3","shiftTip","nodeSpan","selectionCallback","events.triggerRefresh","events.countUpdate","events.d3PhylotreeAddEventListener","render_nodes.isNodeCollapsed","render_edges.edgeCssSelectors","render_edges.edgeVisible","render_nodes.nodeCssSelectors","render_nodes.nodeVisible","render_nodes.nodeNotshown","parser_registry","node_operations.isLeafNode","pairwise_distances","phylotree"],"mappings":"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"}